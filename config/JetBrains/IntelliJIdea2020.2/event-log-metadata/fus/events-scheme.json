{
  "groups" : [ {
    "id" : "JavaFindUsages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "classesUsages" : [ "{enum#boolean}" ],
        "derivedInterfaces" : [ "{enum#boolean}" ],
        "derivedUsages" : [ "{enum#boolean}" ],
        "fieldUsages" : [ "{enum#boolean}" ],
        "implementingClasses" : [ "{enum#boolean}" ],
        "implementingMethods" : [ "{enum#boolean}" ],
        "implicitCalls" : [ "{enum#boolean}" ],
        "includeInherited" : [ "{enum#boolean}" ],
        "includeOverload" : [ "{enum#boolean}" ],
        "methodUsages" : [ "{enum#boolean}" ],
        "overridingMethods" : [ "{enum#boolean}" ],
        "readAccess" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}" ],
        "textOccurrences" : [ "{enum#boolean}" ],
        "usages" : [ "{enum#boolean}" ],
        "writeAccess" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "FindClassUsages", "FindMethodUsages", "FindPackageUsages", "FindThrowUsages", "FindVariableUsages" ]
      }
    }
  }, {
    "id" : "accessibility",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:screen.reader.detected|screen.reader.support.enabled|screen.reader.support.enabled.in.vmoptions}" ]
    }
  }, {
    "id" : "actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#action}", "{enum:action.invoked|custom.action.invoked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ],
        "additional.same_window" : [ "{enum#boolean}" ],
        "additional.toolwindow" : [ "{util#toolwindow}" ],
        "class" : [ "{util#class_name}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "lang" : [ "{util#lang}" ],
        "parent" : [ "{enum#parent}", "{util#class_name}", "{enum:LineMarkerActionWrapper|TreeActionWrapper|MyTreeActionWrapper}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "toolwindow" : [ "{util#toolwindow}" ]
      },
      "enums" : {
        "parent" : [ "LineMarkerActionWrapper", "TreeActionWrapper", "MyTreeActionWrapper" ]
      }
    }
  }, {
    "id" : "actions.gtdu",
    "builds" : [ ],
    "versions" : [ {
      "from" : "53"
    } ],
    "rules" : {
      "event_id" : [ "{enum:performed|navigated}" ],
      "event_data" : {
        "choice" : [ "{enum:SU|GTD}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "input_event" : [ "{util#shortcut}" ],
        "navigation_provider_class" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ]
      }
    }
  }, {
    "id" : "actions.runAnything",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#run_anything_class}:_RunAnything_-_execution_-_{enum#run_anything_title}", "{enum#run_anything_class}:_RunAnything_-_more_-_{enum#run_anything_title}", "{enum#_}", "{enum:click.more|execute}" ],
      "event_data" : {
        "group" : [ "{enum#group}", "{enum#__group}", "{util#class_name}" ],
        "list" : [ "{enum#list}", "{enum:RunAnythingMainListModel|RunAnythingHelpListModel|third.party}", "{util#class_name}" ],
        "with_alt" : [ "{enum#boolean}" ],
        "with_shift" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "RunAnything_-_SHIFT_HOLD", "execute", "click.more" ],
        "__group" : [ "Bundler", "rails_generators", "Gradle_tasks", "npm_scripts", "Maven_goals", "rvm_use", "rake", "rbenv_shell", "General", "Recent", "Run_configurations", "Gradle", "Maven", "npm", "Python", "Recent_projects", "ruby", "Grunt", "third.party" ],
        "group" : [ "Bundler", "rails_generators", "Gradle_tasks", "npm_scripts", "Maven_goals", "rvm_use", "rake", "rbenv_shell", "General", "Recent", "Run_configurations", "Gradle", "Maven", "npm", "Python", "Recent_projects", "ruby", "Grunt", "third.party" ],
        "list" : [ "RunAnythingMainListModel", "RunAnythingHelpListModel", "third.party" ],
        "run_anything_class" : [ "RunAnythingMainListModel", "RunAnythingHelpListModel" ],
        "run_anything_title" : [ "Run_configurations", "Recent", "rake", "rails_generators", "Recent_projects", "Bundler", "rvm_use", "ruby", "third.party", "run.anything.group.unknown.title", "Gradle", "Maven", "Python", "npm", "General", "Gradle_tasks", "Maven_goals", "npm_scripts" ]
      }
    }
  }, {
    "id" : "appearance.file.colors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:editor.tabs|file.colors|project.view}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "bigdatatools.hadoop.monitoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "new_time" : [ "{enum:-1|5000|10000|30000}" ],
        "size" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "app.attempts.received", "app.kill", "apps.received", "log.file.opened", "log.list.opened", "node.labels.received", "nodes.received", "opened.in.browser", "opened.in.separate.tab", "refresh.click", "refresh.time.changed" ]
      }
    }
  }, {
    "id" : "bigdatatools.hadoop.monitoring.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.configured}" ],
      "event_data" : {
        "basic_auth_enabled" : [ "{enum#boolean}" ],
        "connection_secured" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "per_project" : [ "{enum#boolean}" ],
        "proxy_type" : [ "{enum:DISABLED|GLOBAL|CUSTOM}" ],
        "server_is_local" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "bigdatatools.rfs.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auth_type" : [ "{enum:secret_key|auth_chain}", "{enum:username_and_key|connection_string|sas_token}" ],
        "config_type" : [ "{enum:uri|config_directory}" ],
        "custom_base_dir" : [ "{enum#boolean}" ],
        "custom_endpoint" : [ "{enum#boolean}" ],
        "custom_root" : [ "{enum#boolean}" ],
        "custom_username" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fs_type" : [ "{enum#__fs_type}" ],
        "id" : [ "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "AWS_S3@S3ConnectionGroup@{regexp#integer}", "AWS_S3@S3ConnectionGroup@-{regexp#integer}", "Azure@AzureConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@-{regexp#integer}", "Minio@MinioConnectionGroup@{regexp#integer}", "Minio@MinioConnectionGroup@-{regexp#integer}", "Linode@LinodeConnectionGroup@{regexp#integer}", "Linode@LinodeConnectionGroup@-{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@-{regexp#integer}" ],
        "kerberos" : [ "{enum#boolean}" ],
        "non_ms_endpoint" : [ "{enum#boolean}" ],
        "per_project" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "gcs.connection.configured", "hdfs.connection.configured", "local.connection.configured", "s3.connection.configured", "azure.connection.configured", "minio.connection.configured", "linode.connection.configured", "do_spaces.connection.configured" ],
        "__fs_type" : [ "s3a", "file", "hdfs", "webhdfs", "unknown", "swebhdfs", "sftp", "ftp" ]
      }
    }
  }, {
    "id" : "bigdatatools.rfs.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "connection_driver_types" : [ "{enum#__connection_driver_types}" ],
        "connection_id" : [ "AWS_S3@S3ConnectionGroup@-{regexp#integer}", "AWS_S3@S3ConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@-{regexp#integer}", "Minio@MinioConnectionGroup@{regexp#integer}", "Minio@MinioConnectionGroup@-{regexp#integer}", "Linode@LinodeConnectionGroup@{regexp#integer}", "Linode@LinodeConnectionGroup@-{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@-{regexp#integer}" ],
        "connection_ids" : [ "AWS_S3@S3ConnectionGroup@-{regexp#integer}", "AWS_S3@S3ConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@-{regexp#integer}", "Minio@MinioConnectionGroup@{regexp#integer}", "Minio@MinioConnectionGroup@-{regexp#integer}", "Linode@LinodeConnectionGroup@{regexp#integer}", "Linode@LinodeConnectionGroup@-{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@-{regexp#integer}" ],
        "contain_directories" : [ "{enum#boolean}" ],
        "contain_files" : [ "{enum#boolean}" ],
        "contains_roots" : [ "{enum#boolean}" ],
        "driver_type" : [ "{enum#__driver_type}", "{enum:local|hdfs}" ],
        "errors_count" : [ "{regexp#integer}" ],
        "expanded_rows" : [ "{regexp#integer}" ],
        "file_extension" : [ "{enum#__file_extension}" ],
        "file_extensions" : [ "{enum#__file_extensions}" ],
        "file_size" : [ "{enum#__file_size}" ],
        "file_sizes" : [ "{enum#__file_sizes}" ],
        "has_meta" : [ "{enum#boolean}" ],
        "is_directory" : [ "{enum#boolean}" ],
        "nodes_count" : [ "{enum#__nodes_count}" ],
        "success" : [ "{enum#boolean}" ],
        "target_connection_id" : [ "S3@S3ConnectionGroup@-{regexp#integer}", "S3@S3ConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}" ],
        "target_driver_type" : [ "{enum#__target_driver_type}" ]
      },
      "enums" : {
        "__connection_driver_types" : [ "s3", "local", "hdfs", "gcs", "sftp", "azure", "linode", "minio", "ceph", "do_spaces" ],
        "__driver_type" : [ "s3", "local", "hdfs", "gcs", "sftp", "azure", "linode", "minio", "ceph", "do_spaces" ],
        "__event_id" : [ "action.copy.file.path", "action.delete", "action.mkdir", "action.move", "action.refresh", "action.rename", "action.save.to.disk", "action.show.in.file.manager", "connection.refreshed", "copy.paste", "drag.and.drop", "file.viewer.opened", "panel.refreshed", "rows.expanded", "action.show.file.info", "action.upload.from.disk" ],
        "__file_extension" : [ "csv", "no_extension", "parquet", "orc", "tsv", "json", "sequence", "avro", "unknown" ],
        "__file_extensions" : [ "csv", "no_extension", "parquet", "orc", "tsv", "json", "sequence", "avro", "unknown" ],
        "__file_size" : [ "0", "1_1k", "1k_10k", "10k_1m", "1m_10m", "10m_100m", "100m_1g", "over_1g" ],
        "__file_sizes" : [ "0", "1_1k", "1k_10k", "10k_1m", "1m_10m", "10m_100m", "100m_1g", "over_1g" ],
        "__nodes_count" : [ "1", "2_5", "6_25", "26_50", "51_200", "201_more" ],
        "__target_driver_type" : [ "s3", "hdfs", "local", "gcs", "sftp", "azure", "linode", "minio", "ceph", "do_spaces" ]
      }
    }
  }, {
    "id" : "bigdatatools.spark.monitoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "column" : [ "{util#spark_monitoring_column_name}" ],
        "field" : [ "{enum#__field}" ],
        "name" : [ "{enum:Applications|Spark_properties|System_properties|Classpath_entries|Runtime|Tasks|Tasks_summary}", "{enum:StageDetails|StageTasks}", "{enum#__name}" ],
        "running_applications" : [ "{enum#__running_applications}" ],
        "total_applications" : [ "{enum#__total_applications}" ],
        "type" : [ "{enum#__type}", "{enum:JobStatus|ApplicationStatus|SqlStatus|StageStatus}", "{enum:CreateConnection|OpenUrl|OpenSettings|Refresh}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "columns.visibility.changed", "connected", "panel.expanded", "block.shown", "page.selected", "state.filter.changed", "toolbar.action.invoked" ],
        "__field" : [ "Succeeded", "Active", "Unknown", "Complete", "Failed", "Skipped", "Running", "Completed", "Pending" ],
        "__name" : [ "Storage", "Jobs", "Stages", "Environment", "Executors", "SQL", "Unknown" ],
        "__running_applications" : [ "0", "1", "2_5", "6_15", "16_30", "31_more" ],
        "__total_applications" : [ "0", "1", "2_5", "6_15", "16_30", "31_more" ],
        "__type" : [ "TaskColumns", "SqlColumns", "ExecutorColumns", "JobColumns", "StageColumns", "ApplicationColumns", "StorageColumns" ]
      }
    }
  }, {
    "id" : "bigdatatools.spark.monitoring.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.configured}" ],
      "event_data" : {
        "basic_auth_enabled" : [ "{enum#boolean}" ],
        "connection_secured" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "history_server" : [ "{enum#boolean}" ],
        "id" : [ "Spark_monitoring_connection@SparkMonitoringConnections@-{regexp#integer}", "Spark_monitoring_connection@SparkMonitoringConnections@{regexp#integer}" ],
        "per_project" : [ "{enum#boolean}" ],
        "proxy_type" : [ "{enum:DISABLED|GLOBAL|CUSTOM}" ],
        "server_is_local" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "bigdatatools.spark.submit.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.configured|global}" ],
      "event_data" : {
        "archives_size" : [ "{regexp#integer}" ],
        "driver_class_paths_size" : [ "{regexp#integer}" ],
        "driver_library_paths_size" : [ "{regexp#integer}" ],
        "jars_files_size" : [ "{regexp#integer}" ],
        "py_files_size" : [ "{regexp#integer}" ],
        "type" : [ "{enum:local|ssh}" ],
        "visible_blocks" : [ "{enum#__visible_blocks}" ]
      },
      "enums" : {
        "__visible_blocks" : [ "SPARK_CONFIG", "DEPENDENCIES", "MAVEN_DEPENDENCIES", "DRIVER", "EXECUTOR", "KERBEROS", "INTEGRATION", "ADDITIONAL", "SHELL_OPTIONS" ]
      }
    }
  }, {
    "id" : "bigdatatools.visualization",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:visualization.change|visualization.load|visualization.run}" ],
      "event_data" : {
        "cell_index" : [ "{regexp#integer}" ],
        "cell_type" : [ "{enum#__cell_type}" ],
        "collapsed" : [ "{enum#boolean}" ],
        "current_page" : [ "{enum#__current_page}" ],
        "inlays_full_load_duration" : [ "{regexp#integer}" ],
        "inlays_self_load_duration" : [ "{regexp#integer}" ],
        "notebook_json_length" : [ "{regexp#integer}" ],
        "notebook_paragraphs_count" : [ "{regexp#integer}" ],
        "notebook_text_length" : [ "{regexp#integer}" ],
        "series" : [ "{regexp#series}" ],
        "table_columns" : [ "{regexp#integer}" ],
        "table_rows" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__cell_type" : [ "alluxio", "angular", "bigquery", "cassandra", "elasticsearch", "file", "flink", "groovy", "hbase", "ignite", "ignitesql", "jdbc", "kylin", "lens", "livy", "pyspark", "pyspark3", "sparkr", "shared", "md", "neo4j", "pig", "query", "python", "ipython", "sql", "conda", "docker", "sap", "sh", "spark", "dep", "ipyspark", "r", "athena", "default", "unknown" ],
        "__current_page" : [ "Chart", "Table", "Console", "Image", "Html", "Text" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.bindings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:updated|default.used}" ],
      "event_data" : {
        "connection_id" : [ "Zeppelin_connection@ZeppelinConnections@-{regexp#integer}", "Zeppelin_connection@ZeppelinConnections@{regexp#integer}" ],
        "count_selected" : [ "{regexp#integer}" ],
        "count_total" : [ "{regexp#integer}" ],
        "group" : [ "{enum#__group}" ],
        "name_is_default" : [ "{enum#boolean}" ],
        "zeppelin_version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__group" : [ "spark", "md", "angular", "sh", "livy", "alluxio", "file", "flink", "python", "ignite", "lens", "cassandra", "kylin", "elasticsearch", "jdbc", "hbase", "bigquery", "pig", "groovy", "neo4j", "sap", "athena", "default", "unknown" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.configured}" ],
      "event_data" : {
        "connection_anonymous" : [ "{enum#boolean}" ],
        "connection_hadoop_version" : [ "{regexp#version}" ],
        "connection_nginx_auth_enabled" : [ "{enum#boolean}" ],
        "connection_perProject" : [ "{enum#boolean}" ],
        "connection_scala_version" : [ "{regexp#version}" ],
        "connection_secured" : [ "{enum#boolean}" ],
        "connection_spark_version" : [ "{regexp#version}" ],
        "server_is_local" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.instance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:notebook.list.update|connect}" ],
      "event_data" : {
        "connection_id" : [ "Zeppelin_connection@ZeppelinConnections@-{regexp#integer}", "Zeppelin_connection@ZeppelinConnections@{regexp#integer}" ],
        "notebooks_count" : [ "{regexp#integer}" ],
        "zeppelin_version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.interpreter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "connection_id" : [ "Zeppelin_connection@ZeppelinConnections@-{regexp#integer}", "Zeppelin_connection@ZeppelinConnections@{regexp#integer}" ],
        "count_maven" : [ "{regexp#integer}" ],
        "count_total" : [ "{regexp#integer}" ],
        "driver_type" : [ "{enum#__driver_type}" ],
        "interpreter_type" : [ "{enum#__interpreter_type}" ],
        "interpreters_count_custom_id" : [ "{regexp#integer}" ],
        "interpreters_count_custom_name" : [ "{regexp#integer}" ],
        "interpreters_count_total" : [ "{regexp#integer}" ],
        "name_is_default" : [ "{enum#boolean}" ],
        "zeppelin_version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__driver_type" : [ "postgres", "mysql", "mariadb", "redshift", "hive", "phoenix", "tajo" ],
        "__event_id" : [ "list.get", "list.get.no.rights", "interpreter.dependencies.used", "interpreter.used", "jdbc.driver.used" ],
        "__interpreter_type" : [ "spark", "md angular", "sh", "livy", "alluxio", "file", "flink", "python", "ignite", "lens", "cassandra", "kylin", "elasticsearch", "jdbc", "hbase", "bigquery", "pig", "groovy", "neo4j", "sap", "athena", "default", "unknown" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.notebook",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum#__action_id}" ],
        "cell_field_change" : [ "{enum:text|meta|unknown}" ],
        "cell_index" : [ "{regexp#integer}" ],
        "cell_json_size" : [ "{regexp#integer}" ],
        "cell_line_size" : [ "{regexp#integer}" ],
        "cell_status" : [ "{enum#__cell_status}" ],
        "cell_text_size" : [ "{regexp#integer}" ],
        "cell_type" : [ "{enum#__cell_type}" ],
        "cells_results_angular_count" : [ "{regexp#integer}" ],
        "cells_results_data_count" : [ "{regexp#integer}" ],
        "cells_results_html_count" : [ "{regexp#integer}" ],
        "cells_results_img_count" : [ "{regexp#integer}" ],
        "cells_results_network_count" : [ "{regexp#integer}" ],
        "cells_results_null_count" : [ "{regexp#integer}" ],
        "cells_results_svg_count" : [ "{regexp#integer}" ],
        "cells_results_table_count" : [ "{regexp#integer}" ],
        "cells_results_text_count" : [ "{regexp#integer}" ],
        "editor_created_time" : [ "{regexp#integer}" ],
        "execution_duration" : [ "{regexp#integer}", "{enum:-1}" ],
        "full_init_time" : [ "{regexp#integer}" ],
        "note_id" : [ "{regexp#hash}" ],
        "notebook_json_length" : [ "{regexp#integer}" ],
        "notebook_paragraphs_count" : [ "{regexp#integer}" ],
        "notebook_synchronized" : [ "{enum#boolean}" ],
        "notebook_text_length" : [ "{regexp#integer}" ],
        "results_code" : [ "{enum#__results_code}" ],
        "results_count_angular" : [ "{regexp#integer}" ],
        "results_count_data" : [ "{regexp#integer}" ],
        "results_count_html" : [ "{regexp#integer}" ],
        "results_count_img" : [ "{regexp#integer}" ],
        "results_count_network" : [ "{regexp#integer}" ],
        "results_count_null" : [ "{regexp#integer}" ],
        "results_count_svg" : [ "{regexp#integer}" ],
        "results_count_table" : [ "{regexp#integer}" ],
        "results_count_text" : [ "{regexp#integer}" ],
        "results_count_total" : [ "{regexp#integer}" ],
        "results_table_column_count" : [ "{regexp#integer}" ],
        "results_table_row_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__action_id" : [ "RUN_ALL", "STOP_ALL", "CLEAR_ALL_OUTPUT", "OPEN_INTERPRETER_BINDINGS", "OPEN_IN_EXTERNAL_BROWSER", "OPEN_MODULE_CONFIG" ],
        "__cell_status" : [ "READY", "PENDING", "RUNNING", "FINISHED", "ABORT", "ERROR" ],
        "__cell_type" : [ "alluxio", "angular", "bigquery", "cassandra", "elasticsearch", "file", "flink", "groovy", "hbase", "ignite", "ignitesql", "jdbc", "kylin", "lens", "livy", "pyspark", "pyspark3", "sparkr", "shared", "md", "neo4j", "pig", "query", "python", "ipython", "sql", "conda", "docker", "sap", "sh", "spark", "dep", "ipyspark", "r", "athena", "default", "unknown" ],
        "__event_id" : [ "note.open", "toolbar.click", "note.run", "note.stop", "note.output.clear", "cell.remove", "cell.add", "cell.output.clear", "cell.run", "cell.edit", "cell.executed", "cell.open" ],
        "__results_code" : [ "SUCCESS", "INCOMPLETE", "ERROR", "KEEP_PREVIOUS_RESULT", "NO_RESULT" ]
      }
    }
  }, {
    "id" : "bookmarks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{util#favorite_type}" ]
      },
      "enums" : {
        "__event_id" : [ "bookmarks.total", "bookmarks.with.letter.mnemonic", "bookmarks.with.line", "bookmarks.with.number.mnemonic", "favorites.directories", "favorites.files", "favorites.lists", "favorites.total", "favorites.custom" ]
      }
    }
  }, {
    "id" : "bookmarks.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:bookmark.navigate|favorites.navigate}" ],
      "event_data" : {
        "mnemonicType" : [ "{enum:Number|None|Letter}" ],
        "navigatable" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "withLine" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "task_runner_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "build.ant.actions",
    "builds" : [ {
      "from" : "191.6873"
    } ],
    "rules" : {
      "event_id" : [ "{enum:RunSelectedBuild|RunTargetAction}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build.ant.state",
    "builds" : [ {
      "from" : "191.6873"
    } ],
    "rules" : {
      "event_id" : [ "{enum#setting}", "{enum#setting}.{enum#state}", "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "isColoredOutputMessages", "isCollapseFinishedTargets", "isRunInBackground", "isViewClosedWhenNoErrors", "hasAntProjects" ],
        "setting" : [ "isColoredOutputMessages", "isCollapseFinishedTargets", "isRunInBackground", "isViewClosedWhenNoErrors", "hasAntProjects" ]
      }
    }
  }, {
    "id" : "build.gradle.actions",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ],
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "_" : [ "GradleExecuteTaskAction", "PasteMvnDependency", "ToggleOfflineAction", "GradleOpenProjectCompositeConfigurationAction", "showGradleDaemonsAction", "stopAllDaemons", "refreshDaemons", "stopSelectedDaemons" ],
        "__event_id" : [ "GradleExecuteTaskAction", "PasteMvnDependency", "ToggleOfflineAction", "GradleOpenProjectCompositeConfigurationAction", "showGradleDaemonsAction", "stopAllDaemons", "refreshDaemons", "stopSelectedDaemons" ]
      }
    }
  }, {
    "id" : "build.gradle.state",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#setting}.{enum#state}", "gradleJvmType.{enum:custom|#JAVA_HOME|#USE_PROJECT_JDK|#JAVA_INTERNAL}", "gradleVersion.{regexp#version}", "gradleVersion.unknown", "gradleJvmVersion.unknown", "gradleJvmVersion.{regexp#version}", "distributionType.{enum:null|default_wrapped|local|wrapped}", "isCompositeBuilds.{enum:no|yes}", "preferredTestRunner.platform", "preferredTestRunner.gradle", "preferredTestRunner.choose_per_test", "storeProjectFilesExternally.{enum:no|yes}", "numberOfGradleProject.{regexp#integer}", "gradleJvm.{regexp#version}", "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value_set}", "{regexp#version}", "{enum:unknown}" ]
      },
      "enums" : {
        "_" : [ "hasGradleProject", "offlineWork", "hasCustomServiceDirectoryPath", "hasCustomGradleVmOptions", "showSelectiveImportDialogOnInitialImport", "storeProjectFilesExternally", "isUseQualifiedModuleNames", "createModulePerSourceSet", "distributionType", "isCompositeBuilds", "disableWrapperSourceDistributionNotification", "gradleJvmType", "gradleJvmVersion", "gradleVersion", "delegateBuildRun", "preferredTestRunner", "ideaSpecificConfigurationUsed" ],
        "__event_id" : [ "createModulePerSourceSet", "delegateBuildRun", "disableWrapperSourceDistributionNotification", "distributionType", "gradleJvmType", "gradleJvmVersion", "gradleVersion", "hasCustomGradleVmOptions", "hasCustomServiceDirectoryPath", "hasGradleProject", "ideaSpecificConfigurationUsed", "isCompositeBuilds", "isUseQualifiedModuleNames", "offlineWork", "preferredTestRunner", "showSelectiveImportDialogOnInitialImport", "storeProjectFilesExternally" ],
        "setting" : [ "createModulePerSourceSet", "delegateBuildRun", "disableWrapperSourceDistributionNotification", "hasGradleProject", "hasCustomServiceDirectoryPath", "hasCustomGradleVmOptions", "isCreateEmptyContentRootDirectories", "isUseQualifiedModuleNames", "offlineWork", "showSelectiveImportDialogOnInitialImport" ],
        "value_set" : [ "null", "default_wrapped", "local", "wrapped", "custom", "#JAVA_HOME", "#USE_PROJECT_JDK", "#JAVA_INTERNAL", "unknown", "platform", "gradle", "choose_per_test" ]
      }
    }
  }, {
    "id" : "build.maven.actions",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "input_event" : [ "{util#shortcut}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "_" : [ "RunBuildAction", "ReimportAction", "ReimportProjectAction", "UpdateFoldersAction", "MavenExecuteGoalAction", "AddManagedFilesAction", "EditSettingsAction", "ToggleProfileAction", "ToggleSkipTestsAction", "DownloadAllSourcesAndDocsAction", "DownloadAllSourcesAction", "UpdateFoldersForProjectAction", "DownloadSelectedSourcesAction", "ExecuteMavenRunConfigurationAction", "AddFileAsMavenProjectAction", "RemoveManagedFilesAction", "MavenShowEffectivePom", "ToggleOfflineAction", "DownloadSelectedSourcesAndDocsAction", "OpenOrCreateSettingsXmlAction", "CollapseAll", "IntroducePropertyAction", "DownloadAllDocsAction", "ToggleIgnoredProjectsAction", "DownloadSelectedDocsAction", "GroupProjectsAction", "EditMavenRunConfigurationAction", "MavenExcludeDependency", "ShowVersionsAction", "ShowBasicPhasesOnlyAction", "AlwaysShowArtifactIdAction", "ShowIgnoredProjectsAction", "OpenOrCreateProfilesXmlAction", "AssignShortcutAction", "RemoveMavenRunConfigurationAction", "ToggleBeforeCompileTasksAction", "ExtractManagedDependenciesAction", "ToggleAfterCompileTasksAction", "ExpandAll", "ToggleBeforeRunTaskAction", "ToggleBeforeRebuildTasksAction", "ToggleAfterRebuildTasksAction" ]
      }
    }
  }, {
    "id" : "build.maven.packagesearch",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:packagesearch.success|packagesearch.error}" ],
      "event_data" : {
        "endpoint" : [ "{enum:suggestPrefix|fulltext}" ],
        "exception" : [ "{util#class_name}" ],
        "time" : [ "{regexp#integer}" ],
        "timeout" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "build.maven.state",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#setting}.{enum#state}", "checksumPolicy.{enum:fail|not_set|warn}", "failureBehavior.{enum:at_end|fast|never|not_set}", "generatedSourcesFolder.{enum:autodetect|generated_source_folder|ignore|subfolder}", "jdkTypeForImporter.{enum:#JAVA_INTERNAL|#JAVA_HOME|custom}", "jdkVersionForImporter.unknown", "loggingLevel.{enum:debug|error|fatal|info|warn}", "mavenVersion.{regexp#version}", "mavenVersion.unknown", "outputLevel.{enum:debug|error|fatal|info|warn}", "pluginUpdatePolicy.{enum:default|do_not_update|update}", "runnerJreType.{enum:#USE_PROJECT_JDK|#JAVA_HOME|#JAVA_INTERNAL|custom}", "runnerJreVersion.unknown", "runnerJreVersion.{regexp#version}", "updateFoldersOnImportPhase.{enum:generate-resources|generate-sources|generate-test-resources|process-resources|process-sources|process-test-resources}", "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value_set}", "{regexp#version}", "{enum:unknown}" ]
      },
      "enums" : {
        "_" : [ "hasMavenProject", "checksumPolicy", "failureBehavior", "outputLevel", "pluginUpdatePolicy", "loggingLevel", "alwaysUpdateSnapshots", "nonRecursive", "printErrorStackTraces", "usePluginRegistry", "workOffline", "mavenVersion", "localRepository", "userSettingsFile", "lookForNested", "dedicatedModuleDir", "storeProjectFilesExternally", "importAutomatically", "autoDetectCompiler", "createModulesForAggregators", "createModuleGroups", "keepSourceFolders", "excludeTargetFolder", "useMavenOutput", "generatedSourcesFolder", "updateFoldersOnImportPhase", "downloadDocsAutomatically", "downloadSourcesAutomatically", "customDependencyTypes", "jdkTypeForImporter", "jdkVersionForImporter", "hasVmOptionsForImporter", "hasIgnoredFiles", "hasIgnoredPatterns", "delegateBuildRun", "runMavenInBackground", "hasRunnerVmOptions", "hasRunnerEnvVariables", "passParentEnv", "skipTests", "hasRunnerMavenProperties", "runnerJreType", "runnerJreVersion" ],
        "__event_id" : [ "alwaysUpdateSnapshots", "autoDetectCompiler", "checksumPolicy", "createModuleGroups", "createModulesForAggregators", "customDependencyTypes", "dedicatedModuleDir", "delegateBuildRun", "downloadDocsAutomatically", "downloadSourcesAutomatically", "excludeTargetFolder", "failureBehavior", "generatedSourcesFolder", "hasIgnoredFiles", "hasIgnoredPatterns", "hasMavenProject", "hasRunnerEnvVariables", "hasRunnerMavenProperties", "hasRunnerVmOptions", "hasVmOptionsForImporter", "jdkTypeForImporter", "jdkVersionForImporter", "keepSourceFolders", "localRepository", "loggingLevel", "lookForNested", "mavenVersion", "nonRecursive", "outputLevel", "passParentEnv", "pluginUpdatePolicy", "printErrorStackTraces", "runMavenInBackground", "runnerJreType", "runnerJreVersion", "skipTests", "storeProjectFilesExternally", "updateFoldersOnImportPhase", "useMavenOutput", "usePluginRegistry", "userSettingsFile", "workOffline" ],
        "setting" : [ "alwaysUpdateSnapshots", "autoDetectCompiler", "createModuleGroups", "createModulesForAggregators", "customDependencyTypes", "dedicatedModuleDir", "delegateBuildRun", "downloadDocsAutomatically", "downloadSourcesAutomatically", "excludeTargetFolder", "hasIgnoredFiles", "hasIgnoredPatterns", "hasMavenProject", "hasRunnerEnvVariables", "hasRunnerMavenProperties", "hasRunnerVmOptions", "hasVmOptionsForImporter", "importAutomatically", "keepSourceFolders", "localRepository", "loggingLevel", "lookForNested", "nonRecursive", "outputLevel", "passParentEnv", "printErrorStackTraces", "runMavenInBackground", "skipTests", "storeProjectFilesExternally", "useMavenOutput", "usePluginRegistry", "userSettingsFile", "workOffline" ],
        "value_set" : [ "fail", "not_set", "warn", "at_end", "fast", "never", "debug", "error", "fatal", "info", "default", "do_not_update", "update", "unknown", "autodetect", "generated_source_folder", "ignore", "subfolder", "generate-resources", "generate-sources", "generate-test-resources", "process-resources", "process-sources", "process-test-resources", "#JAVA_INTERNAL", "#JAVA_HOME", "custom", "#USE_PROJECT_JDK" ]
      }
    }
  }, {
    "id" : "build.tools",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#build_tools}", "externalSystemId", "{enum:externalSystemId}" ],
      "event_data" : {
        "value" : [ "{enum#build_tools}" ]
      }
    }
  }, {
    "id" : "build.tools.actions",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{util#action}", "{enum:action.invoked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#__action_id}" ],
        "class" : [ "{util#class_name}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "system_id" : [ "{enum#build_tools}" ]
      },
      "enums" : {
        "_" : [ "RefreshAllExternalProjectsAction", "RunExternalSystemTaskAction", "ShowExternalSystemSettingsAction", "RefreshExternalProjectAction", "ExecuteExternalSystemRunConfigurationAction", "AttachExternalProjectAction", "DetachExternalProjectAction", "OpenExternalConfigAction", "GradleRefreshProjectDependenciesAction", "ExternalSystemSelectProjectDataToImportAction", "RunTaskAction", "ToggleAutoImportAction", "EditExternalSystemRunConfigurationAction", "OpenTasksActivationManagerAction", "IgnoreExternalProjectAction", "RemoveExternalSystemRunConfigurationAction", "RunCommandAction", "ShowSettingAction", "GroupModulesAction", "AssignShortcutAction", "ToggleAfterCompileTasksAction", "ToggleAfterSyncTaskAction", "ShowTaskAction", "ToggleBeforeCompileTasksAction", "ToggleBeforeSyncTaskAction", "ToggleAfterRebuildTasksAction", "GroupTasksAction", "ShowIgnoredAction", "ShowInheritedTasksAction", "SbtHelpAction", "InspectTaskAction", "InspectSettingAction", "ToggleBeforeRebuildTasksAction", "AssignRunConfigurationShortcutAction" ],
        "__action_id" : [ "RefreshAllExternalProjectsAction", "RunExternalSystemTaskAction", "ShowExternalSystemSettingsAction", "RefreshExternalProjectAction", "ExecuteExternalSystemRunConfigurationAction", "AttachExternalProjectAction", "DetachExternalProjectAction", "OpenExternalConfigAction", "GradleRefreshProjectDependenciesAction", "ExternalSystemSelectProjectDataToImportAction", "RunTaskAction", "ToggleAutoImportAction", "EditExternalSystemRunConfigurationAction", "OpenTasksActivationManagerAction", "IgnoreExternalProjectAction", "RemoveExternalSystemRunConfigurationAction", "RunCommandAction", "ShowSettingAction", "GroupModulesAction", "AssignShortcutAction", "ToggleAfterCompileTasksAction", "ToggleAfterSyncTaskAction", "ShowTaskAction", "ToggleBeforeCompileTasksAction", "ToggleBeforeSyncTaskAction", "ToggleAfterRebuildTasksAction", "GroupTasksAction", "ShowIgnoredAction", "ShowInheritedTasksAction", "SbtHelpAction", "InspectTaskAction", "InspectSettingAction", "ToggleBeforeRebuildTasksAction", "AssignRunConfigurationShortcutAction" ]
      }
    }
  }, {
    "id" : "build.tools.state",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#setting}.{enum#state}", "numberOfLinkedProject.{regexp#count}", "modules.count.{regexp#count}", "{enum#_}", "{enum:modules.count|numberOfLinkedProject|useQualifiedModuleNames|autoImport}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "externalSystemId" : [ "{enum#build_tools}" ]
      },
      "enums" : {
        "_" : [ "numberOfLinkedProject", "autoImport", "useQualifiedModuleNames", "modules.count" ],
        "setting" : [ "autoImport", "useQualifiedModuleNames" ]
      }
    }
  }, {
    "id" : "completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "alphabetically" : [ "{enum#boolean}" ],
        "backspaces" : [ "{regexp#integer}" ],
        "completion_char" : [ "{enum#__completion_char}" ],
        "contributor" : [ "{util#class_name}" ],
        "dumb_finish" : [ "{enum#boolean}" ],
        "dumb_start" : [ "{enum#boolean}" ],
        "duration" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TYPED|EXPLICIT|CANCELED_EXPLICITLY|CANCELED_BY_TYPING}" ],
        "lang" : [ "{util#lang}" ],
        "ml_used" : [ "{enum#boolean}" ],
        "query_length" : [ "{regexp#integer}" ],
        "ruby_lookup_usage_location" : [ "{enum#__ruby_lookup_usage_location}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "selected_index" : [ "{regexp#integer}" ],
        "selection_changed" : [ "{regexp#integer}" ],
        "spellchecker" : [ "{enum#boolean}" ],
        "time_to_show" : [ "{regexp#integer}" ],
        "token_length" : [ "{regexp#integer}" ],
        "total_ml_time" : [ "{regexp#integer}" ],
        "typing" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}", "{enum:unknown}" ]
      },
      "enums" : {
        "__completion_char" : [ "ENTER", "TAB", "COMPLETE_STATEMENT", "AUTO_INSERT", "OTHER" ],
        "__ruby_lookup_usage_location" : [ "COMMON", "DEBUG", "EVAL", "IRB", "RAILS" ]
      }
    }
  }, {
    "id" : "completion.postfix",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#completion_template}", "{util#completion_provider_template}", "{enum:expanded}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#completion_provider_template}" ],
        "template" : [ "{util#completion_template}" ]
      }
    }
  }, {
    "id" : "create.directory.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:completion.variant.chosen}" ],
      "event_data" : {
        "contributor" : [ "{enum#contributor_name}", "{enum:third.party|GradleDirectoryCompletionContributor|MavenDirectoryCompletionContributor}" ]
      },
      "enums" : {
        "contributor_name" : [ "third.party", "GradleDirectoryCompletionContributor", "MavenDirectoryCompletionContributor" ]
      }
    }
  }, {
    "id" : "customize.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "group" : [ "{enum#__group}" ],
        "page" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "timestamp" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "remaining.pages.skipped", "WizardDisplayed", "UIThemeChanged", "DesktopEntryCreated", "LauncherScriptCreated", "BundledPluginGroupDisabled", "BundledPluginGroupEnabled", "BundledPluginGroupCustomized", "FeaturedPluginInstalled" ],
        "__group" : [ "Java_Frameworks", "Web_Development", "Version_Controls", "Test_Tools", "Application_Servers", "Clouds", "Swing", "Android", "Database_Tools", "Other_Tools", "Plugin_Development", "Build_Tools" ]
      }
    }
  }, {
    "id" : "cwm.lifecycle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "client_id" : [ "{regexp#hash}" ],
        "id" : [ "{regexp#integer}" ],
        "sessionId" : [ "{regexp#hash}" ]
      },
      "enums" : {
        "__event_id" : [ "connected", "finished", "onCircleLeftClickStart", "onCircleLeftClickStop", "onCircleRightClick", "onEditorFollowingLabelResume", "onEditorFollowingLabelStop", "onEditorFullSyncLabelStop", "onReconnection", "sessionCreated", "sessionTerminated" ]
      }
    }
  }, {
    "id" : "database.oracle.debug",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|finished}" ],
      "event_data" : {
        "result-state" : [ "{enum:state_completed|state_fail|state_finished|state_broken}" ],
        "stepping-mode" : [ "{enum:1|2}" ],
        "stepping-pauseAtBegin" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "db.datasource.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#db_name}", "read-only_{enum#_}", "auto-sync_{enum#_}", "auto-commit_{enum#_}", "ssh_{enum#_}", "ssl_{enum#_}", "legacy_introspector_{enum#_}", "schema_control_{enum#_}", "introspect_{enum#_}", "{enum:datasource}" ],
      "event_data" : {
        "auto-commit" : [ "{enum#boolean}" ],
        "auto-sync" : [ "{enum#boolean}" ],
        "dbms" : [ "{enum#__dbms}" ],
        "introspect" : [ "{enum#_}", "{enum:no_sources|user_sources|user_and_system_sources}" ],
        "legacy-introspector" : [ "{enum#boolean}" ],
        "legacy_introspector" : [ "{enum#boolean}" ],
        "read-only" : [ "{enum#boolean}" ],
        "schema-control" : [ "{enum:automatic|manual|forbid}" ],
        "schema_control" : [ "{enum#_}" ],
        "ssh" : [ "{enum#boolean}" ],
        "ssl" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}", "{regexp#integer}.-{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "on", "off", "automatic", "manual", "forbid", "no_sources", "user_sources", "user_and_system_sources" ],
        "__dbms" : [ "ORACLE", "MEMSQL", "MARIADB", "MYSQL", "POSTGRES", "REDSHIFT", "GREENPLUM", "MSSQL", "AZURE", "SYBASE", "DB2_LUW", "DB2", "SQLITE", "HSQLDB", "H2", "DERBY", "EXASOL", "CLICKHOUSE", "CASSANDRA", "VERTICA", "HIVE", "SPARK", "HANA", "FIREBIRD", "PRESTO", "INFORMIX", "IMPALA", "NETEZZA", "PHOENIX", "SNOWFLAKE", "INGRES", "TERADATA", "OPENEDGE", "TIBERO", "FILEMAKER", "FRONTBASE", "MONGO", "UNKNOWN" ],
        "db_name" : [ "ORACLE", "MEMSQL", "MARIADB", "MYSQL", "POSTGRES", "REDSHIFT", "GREENPLUM", "MSSQL", "AZURE", "SYBASE", "DB2_LUW", "DB2", "SQLITE", "HSQLDB", "H2", "DERBY", "EXASOL", "CLICKHOUSE", "CASSANDRA", "VERTICA", "HIVE", "SPARK", "HANA", "FIREBIRD", "PRESTO", "INFORMIX", "IMPALA", "NETEZZA", "PHOENIX", "SNOWFLAKE", "INGRES", "TERADATA", "OPENEDGE", "TIBERO", "FILEMAKER", "FRONTBASE", "MONGO", "UNKNOWN" ]
      }
    }
  }, {
    "id" : "db.ddl.dialects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "GenericSQL", "MySQL", "PostgreSQL", "OracleSqlPlus", "MariaDB", "DB2", "H2", "Oracle", "Redshift", "SQLite", "SparkSQL", "TSQL" ]
      }
    }
  }, {
    "id" : "db.managers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:manager}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "name" : [ "{enum:local|sql|android}" ]
      },
      "enums" : {
        "_" : [ "local", "sql", "android" ]
      }
    }
  }, {
    "id" : "db.products",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "version" : [ "{regexp#version}", "{regexp#integer}.-{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "ORACLE", "MEMSQL", "MARIADB", "MYSQL", "POSTGRES", "REDSHIFT", "GREENPLUM", "MSSQL", "AZURE", "SYBASE", "DB2_LUW", "DB2", "SQLITE", "HSQLDB", "H2", "DERBY", "EXASOL", "CLICKHOUSE", "CASSANDRA", "VERTICA", "HIVE", "SPARK", "HANA", "FIREBIRD", "PRESTO", "INFORMIX", "IMPALA", "NETEZZA", "PHOENIX", "SNOWFLAKE", "INGRES", "TERADATA", "OPENEDGE", "TIBERO", "FILEMAKER", "FRONTBASE", "MONGO", "UNKNOWN" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "total.{regexp#count}", "total.disabled.{regexp#count}", "total.non.suspending.{regexp#count}", "not.default.suspend.ALL.{util#breakpoint}", "not.default.suspend.THREAD.{util#breakpoint}", "not.default.suspend.NONE.{util#breakpoint}", "{enum#_}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "suspendPolicy" : [ "{enum:ALL|THREAD|NONE}" ],
        "type" : [ "{util#breakpoint}" ]
      },
      "enums" : {
        "_" : [ "using.groups", "using.condition", "using.log.expression", "using.temporary", "using.dependent", "using.log.message", "using.log.stack", "not.default.suspend", "total", "total.disabled", "total.non.suspending" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "verified.{regexp#integer}", "new.custom.{util#plugin}", "new.{util#breakpoint}", "{enum#_}", "{enum:breakpoint.added|breakpoint.verified}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "time" : [ "{regexp#integer}" ],
        "type" : [ "{util#breakpoint}" ],
        "within_session" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "new.breakpoint", "new.within.session", "new.cython-line", "new.custom" ]
      }
    }
  }, {
    "id" : "debugger.evaluate.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.open|evaluate|mode.switch}" ],
      "event_data" : {
        "mode" : [ "{enum:CODE_FRAGMENT|EXPRESSION}" ]
      }
    }
  }, {
    "id" : "debugger.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#no_}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "forceClassicVm", "disableJit", "showAlternativeSource", "hotswapInBackround", "enableMemoryAgent", "alwaysSmartStepInto", "skipConstructors", "skipGetters", "skipClassloaders", "compileBeforeHotswap", "hotswapHangWarningEnabled", "watchReturnValues", "autoVariablesMode", "killProcessImmediately", "resumeOnlyCurrentThread", "instrumentingAgent" ],
        "no_" : [ "noForceClassicVm", "noDisableJit", "noShowAlternativeSource", "noHotswapInBackround", "noEnableMemoryAgent", "noAlwaysSmartStepInto", "noSkipConstructors", "noSkipGetters", "noSkipClassloaders", "noCompileBeforeHotswap", "noHotswapHangWarningEnabled", "noWatchReturnValues", "noAutoVariablesMode", "noKillProcessImmediately", "noResumeOnlyCurrentThread", "noInstrumentingAgent" ]
      }
    }
  }, {
    "id" : "deployment.activities",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "start_time_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "autoupload.session.finished", "download.action.finished", "download.action.started", "upload.action.finished", "upload.action.started" ]
      }
    }
  }, {
    "id" : "deployment.publish.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "AutoUpload.{enum#_}", "AutoUpload.external.changes.{enum#_}", "Stop.on.first.error.{enum#_}", "Overwrite.up.to.date.files.{enum#_}", "Delete.target.items.{enum#_}", "Create.empty.dirs.{enum#_}", "Prompt.on.local.overwrite.{enum#_}", "Notify.remote.changes.{enum#_}", "Show.warning.dialog.on.Remote.Host.{enum#_}", "Permissions.on.files.{regexp#integer}", "Permissions.on.files.-{regexp#integer}", "Prompt.on.remote.overwrite.{enum#_}", "Logging.verbosity.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}", "{regexp#permission}" ]
      },
      "enums" : {
        "_" : [ "ALWAYS", "ON_EXPLICIT_SAVE", "NEVER", "yes", "no", "NONE", "CHECK_TIMESTAMP", "CHECK_CONTENT", "ERRORS", "BRIEF", "DETAILS" ],
        "_1" : [ "AutoUpload", "AutoUpload.external.changes", "Stop.on.first.error", "Overwrite.up.to.date.files", "Delete.target.items", "Create.empty.dirs", "Prompt.on.local.overwrite", "Prompt.on.remote.overwrite", "Permissions.on.files", "Permissions.on.folder", "Notify.remote.changes", "Show.warning.dialog.on.Remote.Host", "Logging.verbosity" ],
        "value" : [ "always", "on_explicit_save", "never", "none", "check_timestamp", "check_content", "errors", "brief", "details" ]
      },
      "regexps" : {
        "permission" : "-?[0-9]{1,3}"
      }
    }
  }, {
    "id" : "deployment.serverSettingsUI",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "deploymentServerSettingsUI.visibility.new{enum#_}LevelGroup", "deploymentServerSettingsUI.visibility.switchGroupTo{enum#_}Level", "defaultServerSettingWithAutouploadOn.{enum#_}", "deploymentServerSettingsUI.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "decision" : [ "{enum#decision}" ],
        "level" : [ "{enum#level}" ]
      },
      "enums" : {
        "_" : [ "Project", "IDE", "changeDefaultServerCancelled", "changeDefaultServerExplicitly", "changeDefaultServerSilently", "disableDefaultServerCancelled", "disableDefaultServerExplicitly", "disableDefaultServerSilently", "AutodetectPathClick", "ProjectIDELevelCheckBoxClick" ],
        "_1" : [ "NewGroupVisibilityCreated", "NewGroupVisibilitySwitched", "AutodetectPathClicked", "ProjectIDELevelCheckBoxClicked", "defaultServerSettingWithAutoUploadOnSwitched", "defaultServerSettingWithAutoUploadOnDisabled" ],
        "decision" : [ "explicit", "silent", "cancelled" ],
        "level" : [ "project", "IDE" ]
      }
    }
  }, {
    "id" : "deployment.servers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "root.path.{enum#_}", "SFTP.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "auth" : [ "{enum#auth}" ],
        "compatibilityMode" : [ "{enum#boolean}" ],
        "hiddenFiles" : [ "{enum#boolean}" ],
        "mappingsDeploy" : [ "{regexp#integer}" ],
        "mappingsTogether" : [ "{regexp#integer}" ],
        "mappingsWeb" : [ "{regexp#integer}" ],
        "passiveMode" : [ "{enum#boolean}" ],
        "rootPath" : [ "{enum#rootPath}" ],
        "rootPathSize" : [ "{regexp#integer}" ],
        "server" : [ "{regexp#hash}" ],
        "type" : [ "{enum#type}" ]
      },
      "enums" : {
        "_" : [ "empty", "trivial", "nontrivial", "PASSWORD", "KEY_PAIR", "OPEN_SSH" ],
        "_1" : [ "mappings.together", "mappings.deploy", "mappings.web", "FTP", "FTPS", "MOUNT", "LOCAL", "server" ],
        "auth" : [ "password", "key_pair", "open_ssh" ],
        "rootPath" : [ "empty", "trivial", "nontrivial" ],
        "type" : [ "sftp", "ftp", "ftps", "mount", "local" ]
      }
    }
  }, {
    "id" : "diagram.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "show.diagram->{util#diagram_provider}", "{enum:show.diagram}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#diagram_provider}" ]
      }
    }
  }, {
    "id" : "disabled.bundled.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "disabled.listed.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ]
      }
    }
  }, {
    "id" : "editor.notification.panel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shown|actionInvoked}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "key" : [ "{util#editor_notification_panel_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "editor.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#no_}", "stripTrailingSpaces.{enum#trailingSpaces}", "completionCaseSensitivity.{regexp#integer}", "smartBackspace.{enum#backspace}", "reformatOnPaste.{regexp#integer}", "importsOnPaste.{regexp#integer}", "noBreadcrumbsFor{util#lang}", "breadcrumbsFor{util#lang}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "value" : [ "{enum#backspace}", "{enum#trailingSpaces}", "{regexp#integer}", "{enum#caret_movement}" ]
      },
      "enums" : {
        "_" : [ "caretAfterLineEnd", "caretInsideTabs", "virtualSpaceAtFileBottom", "softWraps", "softWraps.console", "softWraps.preview", "softWraps.relativeIndent", "softWraps.showAll", "ensureNewlineAtEOF", "quickDocOnMouseHover", "blinkingCaret", "blockCaret", "rightMargin", "lineNumbers", "gutterIcons", "foldingOutline", "showLeadingWhitespace", "showInnerWhitespace", "showTrailingWhitespace", "indentGuides", "animatedScroll", "dragNDrop", "wheelZoom", "mouseCamel", "inplaceRename", "preselectOnRename", "inlineDialog", "minimizeScrolling", "afterReformatNotification", "afterOptimizeNotification", "smartHome", "camelWords", "editor.inlay.parameter.hints", "breadcrumbsAbove", "all.breadcrumbs", "breadcrumbs", "intentionBulb", "richCopy", "parameterAutoPopup", "javadocAutoPopup", "completionAutoPopup", "autoPopupCharComplete", "autoCompleteBasic", "autoCompleteSmart", "parameterInfoFullSignature", "indentOnEnter", "braceOnEnter", "javadocOnEnter", "smartEnd", "autoCloseJavadocTags", "surroundByQuoteOrBrace", "pairBracketAutoInsert", "pairQuoteAutoInsert", "reformatOnRBrace", "bracesHighlight", "scopeHighlight", "identifierUnderCaretHighlight", "autoAddImports", "completionHints", "externalAnnotationsInline", "inferredAnnotationsInline", "tabExitsBracketsAndQuotes", "stripTrailingSpaces", "completionCaseSensitivity", "smartBackspace", "reformatOnPaste", "importsOnPaste", "show.actions.in.tooltip", "nextErrorActionGoesToErrorsFirst", "autoReparseDelay", "errorStripeMarkMinHeight", "suppressWarnings", "showMethodSeparators", "importHintEnabled", "caret.movement.line", "caret.movement.word", "renderDoc" ],
        "backspace" : [ "OFF", "AUTOINDENT", "INDENT" ],
        "caret_movement" : [ "NEIGHBOR", "NONE", "BOTH", "CURRENT", "START", "END" ],
        "no_" : [ "noCaretAfterLineEnd", "noCaretInsideTabs", "noVirtualSpaceAtFileBottom", "noSoftWraps", "noSoftWraps.console", "noSoftWraps.preview", "noSoftWraps.relativeIndent", "noSoftWraps.showAll", "noEnsureNewlineAtEOF", "noQuickDocOnMouseHover", "noBlinkingCaret", "noBlockCaret", "noRightMargin", "noLineNumbers", "noGutterIcons", "noFoldingOutline", "noShowLeadingWhitespace", "noShowInnerWhitespace", "noShowTrailingWhitespace", "noIndentGuides", "noAnimatedScroll", "noDragNDrop", "noWheelZoom", "noMouseCamel", "noInplaceRename", "noPreselectOnRename", "noInlineDialog", "noMinimizeScrolling", "noAfterReformatNotification", "noAfterOptimizeNotification", "noSmartHome", "noCamelWords", "noEditor.inlay.parameter.hints", "noBreadcrumbsBelow", "noBreadcrumbs", "noIntentionBulb", "noRichCopy", "noParameterAutoPopup", "noJavadocAutoPopup", "noCompletionAutoPopup", "noAutoPopupCharComplete", "noAutoCompleteBasic", "noAutoCompleteSmart", "noParameterInfoFullSignature", "noIndentOnEnter", "noBraceOnEnter", "noJavadocOnEnter", "noSmartEnd", "noAutoCloseJavadocTags", "noSurroundByQuoteOrBrace", "noPairBracketAutoInsert", "noPairQuoteAutoInsert", "noReformatOnRBrace", "noBracesHighlight", "noScopeHighlight", "noIdentifierUnderCaretHighlight", "noAutoAddImports", "noCompletionHints", "noExternalAnnotationsInline", "noInferredAnnotationsInline", "noTabExitsBracketsAndQuotes" ],
        "trailingSpaces" : [ "None", "Changed", "Whole" ]
      }
    }
  }, {
    "id" : "editor.settings.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "noAutoOptimizeImports", "autoOptimizeImports" ]
      }
    }
  }, {
    "id" : "editor.typing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:typed|too.many.events}" ]
    }
  }, {
    "id" : "educational.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "event" : [ "{enum#authorization_event}", "{enum#hint_event}", "{enum#post_course_event}" ],
        "language" : [ "{util#lang}", "{enum#edu_language}" ],
        "mode" : [ "{enum#edu_mode}" ],
        "platform" : [ "{enum#edu_platform}" ],
        "source" : [ "{enum#navigate_to_task_place}", "{enum#authorization_place}", "{enum#synchronization_place}" ],
        "status" : [ "{enum#edu_check_status}" ],
        "type" : [ "{enum#edu_item_type}", "{enum#link_type}" ]
      },
      "enums" : {
        "_" : [ "navigate.to.task", "edu.project.created", "edu.project.opened", "study.item.created", "link.clicked", "authorization", "show.full.output", "peek.solution", "leave.feedback", "revert.task", "review.stage.topics", "check.task", "hint", "create.course.preview", "preview.task.file", "create.course.archive", "post.course", "synchronize.course", "import.course", "codeforces.submit.solution", "twitter.dialog.shown", "twitter.achievement.posted" ],
        "authorization_event" : [ "log_in", "log_out" ],
        "authorization_place" : [ "settings", "widget", "start_course_dialog", "submissions_tab" ],
        "edu_check_status" : [ "Unchecked", "Solved", "Failed", "unchecked", "solved", "failed" ],
        "edu_item_type" : [ "CheckiO", "PyCharm", "Coursera", "Hyperskill", "section", "framework", "lesson", "edu", "ide", "choice", "code", "output", "theory", "Codeforces" ],
        "edu_language" : [ "JAVA", "kotlin", "Python", "Scala", "JavaScript", "Rust", "ObjectiveC", "go" ],
        "edu_mode" : [ "Study", "Course_Creator" ],
        "edu_platform" : [ "Hyperskill", "Stepik", "Js_CheckiO", "Py_CheckiO" ],
        "hint_event" : [ "expanded", "collapsed" ],
        "link_type" : [ "in_course", "stepik", "external", "psi", "codeforces" ],
        "navigate_to_task_place" : [ "check_all_notification", "task_description_toolbar", "check_panel", "unresolved_dependency_notification" ],
        "post_course_event" : [ "upload", "update" ],
        "synchronization_place" : [ "widget", "project_generation", "project_reopen" ]
      }
    }
  }, {
    "id" : "educational.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "value" : [ "{enum#task_panel}", "{enum#role}" ]
      },
      "enums" : {
        "_" : [ "task.panel", "role" ],
        "role" : [ "student", "educator" ],
        "task_panel" : [ "swing", "javafx", "jcef" ]
      }
    }
  }, {
    "id" : "enabled.bundled.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "enabled.listed.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ]
      }
    }
  }, {
    "id" : "event.log",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "code" : [ "{regexp#integer}" ],
        "error" : [ "{enum:NO_LOGS|NO_UPLOADER|NO_LIBRARIES|NO_TEMP_FOLDER}", "{enum:NO_ARGUMENTS|NO_DEVICE_CONFIG|NO_RECORDER_CONFIG|NO_APPLICATION_CONFIG|IDE_NOT_CLOSING|ERROR_ON_SEND|NOT_PERMITTED_SERVER|ERROR_IN_CONFIG|NOTHING_TO_SEND|SENT_WITH_ERRORS}", "{util#class_name}", "{enum:EMPTY_CONTENT|INVALID_JSON|UNKNOWN}", "{enum:EMPTY_SERVICE_URL|UNREACHABLE_SERVICE|EMPTY_RESPONSE_BODY|ERROR_ON_LOAD}" ],
        "error_ts" : [ "{regexp#integer}" ],
        "external" : [ "{enum#boolean}" ],
        "failed" : [ "{regexp#integer}" ],
        "paths" : [ "{regexp#hash}" ],
        "send" : [ "{regexp#integer}" ],
        "send_ts" : [ "{regexp#integer}" ],
        "stage" : [ "{enum:LOADING|PARSING}" ],
        "succeed" : [ "{enum#boolean}" ],
        "total" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "whitelist.loaded", "whitelist.updated", "logs.send", "external.send.command.creation.started", "external.send.command.creation.finished", "external.send.started", "external.send.finished", "loading.config.failed", "whitelist.update.failed", "whitelist.load.failed", "metadata.loaded", "metadata.updated", "metadata.update.failed", "metadata.load.failed" ]
      }
    }
  }, {
    "id" : "event.log.session",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debug.mode|headless|reporting|test.mode}" ],
      "event_data" : {
        "command_line" : [ "{enum#boolean}" ],
        "debug_agent" : [ "{enum#boolean}" ],
        "fus_test" : [ "{enum#boolean}" ],
        "headless" : [ "{enum#boolean}" ],
        "internal" : [ "{enum#boolean}" ],
        "only_local" : [ "{enum#boolean}" ],
        "suppress_report" : [ "{enum#boolean}" ],
        "teamcity" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "event.log.user.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:statistics.test.mode.enabled|team.city.version.detected}" ]
    }
  }, {
    "id" : "extract.method.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "changedOnHide" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "linkUsed" : [ "{enum#boolean}" ],
        "nameChanged" : [ "{enum#boolean}" ],
        "settingsChange" : [ "{enum:AnnotateOn|AnnotateOff|MakeStaticOn|MakeStaticOff|MakeStaticWithFieldsOn|MakeStaticWithFieldsOff}" ]
      },
      "enums" : {
        "__event_id" : [ "executed", "hidePopup", "openExtractDialog", "settingsChanged", "showPopup" ]
      }
    }
  }, {
    "id" : "feature_suggester",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "suggester_id" : [ "{util#feature_suggester_id}" ]
      },
      "enums" : {
        "__event_id" : [ "notification.dont_suggest", "notification.learn_more", "notification.showed", "notification.thanks", "suggestion_found" ]
      }
    }
  }, {
    "id" : "file.editor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:alternative.file.editor.selected}" ],
      "event_data" : {
        "fileEditor" : [ "{util#class_name}" ],
        "file_path" : [ "{regexp#hash}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "file.prediction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:file.opened|candidate.calculated|calculated}" ],
      "event_data" : {
        "candidates.features" : [ "{util#file_features}" ],
        "candidates.file_path" : [ "{regexp#hash}" ],
        "candidates.opened" : [ "{regexp#integer}" ],
        "candidates.prob" : [ "{regexp#float}" ],
        "candidates.source" : [ "{regexp#integer}" ],
        "context_opened" : [ "{enum#boolean}" ],
        "context_prev_opened" : [ "{enum#boolean}" ],
        "excluded" : [ "{enum#boolean}" ],
        "features_computation" : [ "{regexp#integer}" ],
        "features_ms" : [ "{regexp#integer}" ],
        "file_path" : [ "{regexp#hash}" ],
        "file_type" : [ "{util#file_type}" ],
        "history_bi_max" : [ "{regexp#float}" ],
        "history_bi_min" : [ "{regexp#float}" ],
        "history_bi_mle" : [ "{regexp#float}" ],
        "history_bi_mle_to_max" : [ "{regexp#float}" ],
        "history_bi_mle_to_min" : [ "{regexp#float}" ],
        "history_position" : [ "{regexp#integer}" ],
        "history_size" : [ "{regexp#integer}" ],
        "history_uni_max" : [ "{regexp#float}" ],
        "history_uni_min" : [ "{regexp#float}" ],
        "history_uni_mle" : [ "{regexp#float}" ],
        "history_uni_mle_to_max" : [ "{regexp#float}" ],
        "history_uni_mle_to_min" : [ "{regexp#float}" ],
        "in_library" : [ "{enum#boolean}" ],
        "in_project" : [ "{enum#boolean}" ],
        "in_ref" : [ "{enum#boolean}" ],
        "in_source" : [ "{enum#boolean}" ],
        "name_prefix" : [ "{regexp#integer}" ],
        "opened" : [ "{enum#boolean}" ],
        "path_prefix" : [ "{regexp#integer}" ],
        "performance" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "predict_ms" : [ "{regexp#integer}" ],
        "prev_file_path" : [ "{regexp#hash}" ],
        "prev_file_type" : [ "{util#file_type}" ],
        "probability" : [ "{regexp#float}" ],
        "refs_computation" : [ "{regexp#integer}" ],
        "refs_ms" : [ "{regexp#integer}" ],
        "relative_path_prefix" : [ "{regexp#integer}" ],
        "same_dir" : [ "{enum#boolean}" ],
        "same_module" : [ "{enum#boolean}" ],
        "session" : [ "{regexp#integer}" ],
        "session_id" : [ "{regexp#integer}" ],
        "source" : [ "{enum:vcs|neighbor|open|recent|ref}" ],
        "total_ms" : [ "{regexp#integer}" ],
        "vcs_in_changelist" : [ "{enum#boolean}" ],
        "vcs_prev_in_changelist" : [ "{enum#boolean}" ],
        "vcs_related_prob" : [ "{regexp#float}" ]
      }
    }
  }, {
    "id" : "file.type.configurable.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "file_type" : [ "{util#file_type}" ]
      },
      "enums" : {
        "__event_id" : [ "file.type.added", "file.type.edited", "file.type.removed", "hashbang.added", "hashbang.edited", "hashbang.removed", "ignore.pattern.added", "ignore.pattern.edited", "ignore.pattern.removed", "pattern.added", "pattern.edited", "pattern.removed" ]
      }
    }
  }, {
    "id" : "file.types",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#file_type}", "{enum:file.in.project}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "file.types.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#file_type}", "{enum:open|edit|close|select}" ],
      "event_data" : {
        "file_path" : [ "{regexp#hash}" ],
        "file_type" : [ "{util#file_type}", "{enum:DIFF}" ],
        "is_in_reader_mode" : [ "{enum#boolean}" ],
        "is_writable" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven}", "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "type" : [ "{enum:open|edit}" ]
      }
    }
  }, {
    "id" : "find",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:search.session.started|check.box.toggled|regexp.help.clicked|pin.toggled}" ],
      "event_data" : {
        "case_sensitive" : [ "{enum#boolean}" ],
        "context" : [ "{enum#__context}" ],
        "option_name" : [ "{enum#__option_name}" ],
        "option_value" : [ "{enum#boolean}" ],
        "regular_expressions" : [ "{enum#boolean}" ],
        "type" : [ "{enum:FindInFile|FindInPath}", "{enum:FindInPath}", "{enum:FindInFile|FindInPath|Unknown}" ],
        "whole_words_only" : [ "{enum#boolean}" ],
        "with_file_filter" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "FindPopupPanel$ToggleCaseSensitive", "FindPopupPanel$TogglePreserveCase", "FindPopupPanel$ToggleWholeWords", "FindPopupPanel$ToggleRegex", "FindPopupPanel$ToggleFileFilter", "FindInEditor.MatchCaseOn", "FindInEditor.WholeWordsOn", "FindInEditor.RegexOn", "FindInEditor.Context.IN_STRING_LITERALS", "FindInEditor.Context.IN_COMMENTS", "FindInEditor.Context.EXCEPT_STRING_LITERALS", "FindInEditor.Context.EXCEPT_COMMENTS", "FindInEditor.Context.EXCEPT_COMMENTS_AND_STRING_LITERALS", "FindInPath.MatchCaseOn", "FindInPath.WholeWordsOn", "FindInPath.RegexOn", "FindInPath.FileFilterOn", "FindInPath.Context.IN_STRING_LITERALS", "FindInPath.Context.IN_COMMENTS", "FindInPath.Context.EXCEPT_STRING_LITERALS", "FindInPath.Context.EXCEPT_COMMENTS", "FindInPath.Context.EXCEPT_COMMENTS_AND_STRING_LITERALS" ],
        "__context" : [ "ANY", "IN_STRING_LITERALS", "IN_COMMENTS", "EXCEPT_STRING_LITERALS", "EXCEPT_COMMENTS", "EXCEPT_COMMENTS_AND_STRING_LITERALS" ],
        "__option_name" : [ "CaseSensitive", "PreserveCase", "WholeWords", "Regex", "FileFilter" ]
      }
    }
  }, {
    "id" : "find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:options}" ],
      "event_data" : {
        "additional.isIncludeChildMethods" : [ "{enum#boolean}" ],
        "isSearchForTextOccurrences" : [ "{enum#boolean}" ],
        "isUsages" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}" ]
      }
    }
  }, {
    "id" : "git.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "local_branches" : [ "{regexp#integer}" ],
        "remote_bitbucket" : [ "{regexp#integer}" ],
        "remote_bitbucket_custom" : [ "{regexp#integer}" ],
        "remote_branches" : [ "{regexp#integer}" ],
        "remote_github" : [ "{regexp#integer}" ],
        "remote_github_custom" : [ "{regexp#integer}" ],
        "remote_gitlab" : [ "{regexp#integer}" ],
        "remote_gitlab_custom" : [ "{regexp#integer}" ],
        "remotes" : [ "{regexp#integer}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum:sync|dont_sync|not_decided}", "{enum:branch_default|merge|rebase}", "{enum:stash|shelve}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "repo.sync", "update.type", "save.policy", "use.builtin.ssh", "push.autoupdate", "push.update.all.roots", "cherrypick.autocommit", "warn.about.crlf", "warn.about.detached", "executable", "repository", "showGitBranchesInLog", "updateBranchesFilterInLogOnSelection", "staging.area.enabled" ],
        "__type" : [ "UNIX", "MSYS", "CYGWIN", "UNDEFINED", "NULL" ]
      }
    }
  }, {
    "id" : "go.completion.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:insertion.handler.called}" ],
      "event_data" : {
        "handler_id" : [ "{util#go_completion_handler_id}" ]
      }
    }
  }, {
    "id" : "go.debugger.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debugger.used|local.attach.used}" ]
    }
  }, {
    "id" : "go.experimental.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:generics}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.find.usages.notification",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shown|options.shown|disabled}" ]
    }
  }, {
    "id" : "go.profiler.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "PprofCpuConfigurationType", "PprofMutexConfigurationType", "PprofBlockingConfigurationType", "PprofMemoryConfigurationType" ]
      }
    }
  }, {
    "id" : "go.programming.errors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:compilation.error.detected|runtime.error.detected|inspection.found.problem}" ],
      "event_data" : {
        "compilation_error_message" : [ "{util#compilation_error_message}" ],
        "inspection_problem_message" : [ "{util#inspection_problem_message}" ],
        "runtime_error_message" : [ "{util#runtime_error_message}" ]
      }
    }
  }, {
    "id" : "go.project.model.migration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "module", "jdk.type", "go.path", "go.sdk", "sdk.reference" ]
      }
    }
  }, {
    "id" : "go.settings.codeStyle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:addParenthesesForSingleImport|addLeadingSpaceToComments|useBackQuotesForImports}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.settings.folding",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:oneLineReturns|oneLinePanics|fmtStrings}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.settings.imports",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "import_sorting_value" : [ "{enum:NONE|GOFMT|GOIMPORTS}" ]
      },
      "enums" : {
        "__event_id" : [ "importSorting", "moveAllImportsInOneDeclaration", "groupStdlibImports", "moveAllStdlibImportsInOneGroup", "showImportPopup", "addUnambiguousImportsOnTheFly", "optimizeImportsOnTheFly" ]
      }
    }
  }, {
    "id" : "go.ui.component.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:invoke.quick.settings}" ]
    }
  }, {
    "id" : "go.user.environment",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:sdk|dependency.manager|package.import}" ],
      "event_data" : {
        "dependency_manager_name" : [ "{enum#manager_name}", "{enum#__dependency_manager_name}" ],
        "is_std_package_import" : [ "{enum#boolean}" ],
        "package_import_path" : [ "{enum#import_path}", "{util#package_import_path}", "{util#std_package_import_path}", "{enum#__package_import_path}" ],
        "sdk_major_version" : [ "{regexp#version}" ],
        "sdk_version" : [ "{enum:devel}", "{regexp#go_version}" ]
      },
      "enums" : {
        "_" : [ "sdk", "dependency.manager", "package.import" ],
        "__dependency_manager_name" : [ "Dep", "Glide", "RubiGo", "GoGradle", "Trash", "vgo", "GoDep" ],
        "__package_import_path" : [ "testing", "github.com/stretchr/testify", "github.com/stretchr/testify/assert", "github.com/stretchr/testify/require", "github.com/stretchr/testify/mock", "github.com/stretchr/testify/suite", "gopkg.in/check.v1", "github.com/onsi/ginkgo", "github.com/onsi/gomega", "github.com/franela/goblin", "github.com/smartystreets/goconvey/convey", "github.com/DATA-DOG/godog" ],
        "import_path" : [ "testing", "github.com/stretchr/testify", "github.com/stretchr/testify/assert", "github.com/stretchr/testify/require", "github.com/stretchr/testify/mock", "github.com/stretchr/testify/suite", "gopkg.in/check.v1", "github.com/onsi/ginkgo", "github.com/onsi/gomega", "github.com/franela/goblin", "github.com/smartystreets/goconvey/convey", "github.com/DATA-DOG/godog" ],
        "manager_name" : [ "Dep", "Glide", "RubiGo", "GoGradle", "Trash", "vgo", "GoDep" ]
      },
      "regexps" : {
        "go_version" : "(\\d+\\.?)*\\d+((beta|rc)\\d+)?"
      }
    }
  }, {
    "id" : "got.it.tooltip",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:close|show}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "id_prefix" : [ "{util#got.it.tooltip}" ],
        "type" : [ "{enum:click.button|click.link|click.outside|ancestor.removed|escape.shortcut.pressed|timeout}" ]
      }
    }
  }, {
    "id" : "grazi.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:language.detected|typo.found|quickfix.applied}" ],
      "event_data" : {
        "cancelled" : [ "{enum:true|false}" ],
        "fixes" : [ "{regexp#count}" ],
        "id" : [ "{util#grazi_rule_id}" ],
        "language" : [ "{enum#__language}" ],
        "spellcheck" : [ "{enum:true|false}" ]
      },
      "enums" : {
        "__language" : [ "", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazi.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:enabled.language|native.language|enabled.spellcheck|rule}" ],
      "event_data" : {
        "enabled" : [ "{enum:true|false}" ],
        "id" : [ "{util#grazi_rule_id}" ],
        "value" : [ "{enum#__value}", "{enum:true|false}" ]
      },
      "enums" : {
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazie.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:language.detected|typo.found|quickfix.applied|language.suggested}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fixes" : [ "{regexp#count}" ],
        "id" : [ "{util#grazie_rule_id}" ],
        "language" : [ "{enum#__language}" ]
      },
      "enums" : {
        "__language" : [ "unknown", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazie.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:enabled.language|native.language|rule|strategy}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{util#grazie_rule_id}", "{util#grazie_strategy_id}" ],
        "value" : [ "{enum#__value}" ]
      },
      "enums" : {
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "gutter.icon.click",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#gutter_icon}", "{enum:clicked}" ],
      "event_data" : {
        "current_file" : [ "{util#lang}" ],
        "icon_id" : [ "{util#gutter_icon}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "highlighting.settings.per.file",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:skip.highlighting.roots|skip.inspection.roots}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "http.client.conversions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|succeed|failed}" ],
      "event_data" : {
        "error" : [ "{enum#__error}" ],
        "from" : [ "{enum:curl}" ]
      },
      "enums" : {
        "__error" : [ "not_a_curl", "no_url", "incomplete_option", "unknown_option", "unknown_data_option", "invalid_http_method", "invalid_form_data", "invalid_header" ]
      }
    }
  }, {
    "id" : "http.client.microservices",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:generation|navigate.to.error.element}" ],
      "event_data" : {
        "requestsCount" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ide.jumpToLine",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:GetLinesToJump|GoToLine|JumpToGreenLine|JumpToYellowLine}" ],
      "event_data" : {
        "plugin_version" : [ "{util#plugin_version}" ],
        "status" : [ "{enum:success|failed}" ]
      }
    }
  }, {
    "id" : "ide.script.engine",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum#_}", "{enum:used}" ],
      "event_data" : {
        "factory" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "_" : [ "third.party" ]
      }
    }
  }, {
    "id" : "ide.self.update",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "patches" : [ "{enum:not.available|manual|auto}" ]
      },
      "enums" : {
        "_" : [ "notification.shown", "notification.clicked", "update.failed", "dialog.shown", "dialog.update.started", "dialog.manual.patch.prepared", "dialog.download.clicked", "dialog.shown.no.patch", "dialog.shown.manual.patch" ]
      }
    }
  }, {
    "id" : "ide.update.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:link.clicked}" ],
      "event_data" : {
        "url" : [ "{util#update_dialog_rule_id}" ]
      }
    }
  }, {
    "id" : "ideFeaturesTrainer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#ide_features}", "start.swift.refactorings.{enum#ide_features}", "start.swift.{enum#ide_features}", "start.swift.navigation.{enum#ide_features}", "start.swift.editorbasics.{enum#ide_features}", "start.swift.codegeneration.{enum#ide_features}", "start.swift.codeassistance.{enum#ide_features}", "start.{enum#ide_features}", "start.refactorings.{enum#ide_features}", "start.navigation.{enum#ide_features}", "start.codeassistance.{enum#ide_features}", "passed.swift.navigation.{enum#ide_features}", "passed.swift.editorbasics.{enum#ide_features}", "passed.swift.codeassistance.{enum#ide_features}", "passed.{enum#ide_features}", "passed.refactorings.{enum#ide_features}", "passed.navigation.{enum#ide_features}", "passed.codeassistance.{enum#ide_features}", "{enum:start|passed|group_event|start_module_action}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "group_name" : [ "{enum:TUTORIALS|PROJECTS}" ],
        "group_state" : [ "{enum:expanded|collapsed}" ],
        "language" : [ "{enum:java|go|ruby|swift|html|objectivec|javascript}" ],
        "lesson_id" : [ "{util#lesson_id}" ],
        "module_name" : [ "{util#module_name}" ],
        "progress_percentage" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "ide_features" : [ "rename", "extract.variable", "extract.method", "extract.closure", "rdt.test", "rdt.run", "rdt.debug", "toolwindows", "search", "code", "selection", "multipleselections", "move", "duplicate", "deleteline", "commentline", "collapse", "completions.basiccompletion", "quickfixes", "overrideimplement", "generate", "createfromusage", "quickpopups", "codeformatting", "smarttypecompletion", "select", "refactoringbasics", "extractvariablefield", "extractmethod", "postfixcompletion", "nextpreviousoccurrences", "jumptosource", "filestructure", "declarationimplementation", "ideactions", "hippiecompletion", "editorbasics.deleteline", "declarationandusages", "completionwithtab", "completions.statementcompletion", "completions.completionwithtab", "parameterinfo", "editorcodingassistance", "classsearch", "basiccompletion", "actions", "swift.completions.basiccompletion", "statementcompletion" ]
      }
    }
  }, {
    "id" : "import.old.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:import.dialog.shown|import.initially}" ],
      "event_data" : {
        "config_folder_exists" : [ "{enum#boolean}" ],
        "initial_import_scenario" : [ "{enum:CLEAN_CONFIGS|IMPORTED_FROM_PREVIOUS_VERSION|IMPORTED_FROM_OTHER_PRODUCT|IMPORTED_FROM_CLOUD|CONFIG_DIRECTORY_NOT_FOUND|SHOW_DIALOG_NO_CONFIGS_FOUND|SHOW_DIALOG_CONFIGS_ARE_TOO_OLD|SHOW_DIALOG_REQUESTED_BY_PROPERTY|IMPORT_SETTINGS_ACTION|RESTORE_DEFAULT_ACTION}" ],
        "selected" : [ "{enum#__selected}" ]
      },
      "enums" : {
        "_" : [ "FROM_PREVIOUS", "FROM_CUSTOM", "DO_NOT_IMPORT", "OTHER", "NOT_INITIALIZED" ],
        "__selected" : [ "FROM_PREVIOUS", "FROM_CUSTOM", "DO_NOT_IMPORT", "NOT_INITIALIZED", "OTHER" ]
      }
    }
  }, {
    "id" : "indexing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|stage|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "stage_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "inlay.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:model.options|global.inlays.settings|language.inlays.settings}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_globally" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "model" : [ "{enum#__model}" ],
        "option_id" : [ "{enum#__option_id}" ],
        "option_value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__model" : [ "ts.enum.hints", "annotation.hints", "JavaLens", "js.chain.hints", "ts.chain.hints", "composer.package.version.hints", "groovy.parameters.hints", "chain.hints", "ts.type.hints", "js.type.hints", "parameter.hints.old", "return.values.hints", "KotlinLambdasHintsProvider", "KotlinReferencesTypeHintsProvider" ],
        "__option_id" : [ "js.param.hints.show.names.for.all.args", "vuejs.show.names.for.filters", "inheritors", "java.clear.expression.type", "variables.and.fields", "ruby.show.param.grouping", "js.only.show.names.for.tagged", "ruby.non.literals", "inferred.annotations", "non.paren.single.param", "js.only.show.names.for.pipes", "oc.clangd.namehints.construct.expr", "ruby.method.name.contains.parameter.name", "usages", "oc.clangd.namehints.non.const.references", "php.pass.by.reference", "java.method.name.contains.parameter.name", "java.multiple.params.same.type", "inferred.parameter.types", "java.enums", "js.only.show.names.for.all.args", "php.show.names.for.all.args", "oc.clangd.namehints.enums", "java.build.like.method", "function.returns", "java.new.expr", "java.simple.sequentially.numbered", "vuejs.show.names.for.all.args", "parameters.in.parens", "oc.clangd.namehints.macro.expr", "js.param.hints.show.names.for.tagged", "type.parameter.list", "external.annotations", "angular.show.names.for.all.args", "angular.show.names.for.pipes", "SHOW_PROPERTY_HINT", "SHOW_LOCAL_VARIABLE_HINT", "SHOW_FUNCTION_HINT", "SHOW_PARAMETER_TYPE_HINT", "SHOW_PARAMETER_HINT", "SHOW_LAMBDA_RETURN_EXPRESSION", "SHOW_LAMBDA_IMPLICIT_PARAMETER_RECEIVER", "SHOW_SUSPENDING_CALL", "R_HINT_OPTION_WRAP_DOTS", "sql.show.column.names.in.insert.values", "sql.show.column.names.in.select", "sql.show.column.names.for.asterisk", "implicit.null.result", "related.problems", "hints.type.property", "hints.type.variable", "hints.type.function.return", "hints.type.function.parameter", "hints.lambda.return", "hints.lambda.receivers.parameters" ]
      }
    }
  }, {
    "id" : "inspection.widget",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:highlight.level.changed}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "level" : [ "{enum:Errors_Only|None|All_Problems}", "{enum:SYNTAX|NONE|ALL}" ]
      }
    }
  }, {
    "id" : "inspections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}", "{enum:not.default.state|setting.non.default.state}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "inspection_enabled" : [ "{enum#boolean}" ],
        "inspection_id" : [ "{util#tool}" ],
        "lang" : [ "{util#lang}" ],
        "option_index" : [ "{regexp#integer}" ],
        "option_name" : [ "{util#plugin_info}" ],
        "option_type" : [ "{enum:integer|boolean}" ],
        "option_value" : [ "{enum#boolean}", "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "intellij.cds",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:building.cds.started|building.cds.finished|running.with.cds}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "running_with_archive" : [ "{enum#boolean}" ],
        "status" : [ "{enum#__status}", "{enum:enabled|disabled}" ],
        "uptime_millis" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__status" : [ "success", "cancelled", "terminated-by-user", "plugins-changed", "failed" ]
      }
    }
  }, {
    "id" : "intentions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum:called|shown}" ],
      "event_data" : {
        "id" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "java.compiler.settings.project",
    "builds" : [ {
      "from" : "191.6841",
      "to" : "192.0"
    }, {
      "from" : "192.2549"
    } ],
    "rules" : {
      "event_id" : [ "{enum#setting}", "{enum#setting}.{enum#state}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "setting" : [ "REBUILD_ON_DEPENDENCY_CHANGE", "DISPLAY_NOTIFICATION_POPUP", "PARALLEL_COMPILATION", "COMPILE_AFFECTED_UNLOADED_MODULES_BEFORE_COMMIT", "MAKE_PROJECT_ON_SAVE", "AUTO_SHOW_ERRORS_IN_EDITOR", "CLEAR_OUTPUT_DIRECTORY" ]
      }
    }
  }, {
    "id" : "java.extract.method",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.closed}" ],
      "event_data" : {
        "annotated" : [ "{enum#boolean}" ],
        "constructor" : [ "{enum#boolean}" ],
        "finished" : [ "{enum#boolean}" ],
        "folded" : [ "{enum#boolean}" ],
        "make_varargs" : [ "{enum#boolean}" ],
        "parameters_count" : [ "{regexp#integer}" ],
        "parameters_removed" : [ "{enum#boolean}" ],
        "parameters_renamed" : [ "{enum#boolean}" ],
        "parameters_reordered" : [ "{enum#boolean}" ],
        "parameters_type_changed" : [ "{enum#boolean}" ],
        "preview_used" : [ "{enum#boolean}" ],
        "return_changed" : [ "{enum#boolean}" ],
        "static" : [ "{enum#boolean}" ],
        "static_pass_fields_available" : [ "{enum#boolean}" ],
        "visibility_changed" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "classesUsages" : [ "{enum#boolean}" ],
        "derivedInterfaces" : [ "{enum#boolean}" ],
        "derivedUsages" : [ "{enum#boolean}" ],
        "fieldUsages" : [ "{enum#boolean}" ],
        "implementingClasses" : [ "{enum#boolean}" ],
        "implementingMethods" : [ "{enum#boolean}" ],
        "implicitCalls" : [ "{enum#boolean}" ],
        "includeInherited" : [ "{enum#boolean}" ],
        "includeOverload" : [ "{enum#boolean}" ],
        "methodUsages" : [ "{enum#boolean}" ],
        "overridingMethods" : [ "{enum#boolean}" ],
        "readAccess" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}" ],
        "textOccurrences" : [ "{enum#boolean}" ],
        "usages" : [ "{enum#boolean}" ],
        "writeAccess" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "find.class.started", "find.method.started", "find.package.started", "find.throw.started", "find.variable.started" ]
      }
    }
  }, {
    "id" : "java.language",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:MODULE_JDK_VERSION|MODULE_LANGUAGE_LEVEL}" ],
      "event_data" : {
        "ea" : [ "{enum#boolean}" ],
        "feature" : [ "{regexp#integer}" ],
        "minor" : [ "{regexp#integer}" ],
        "preview" : [ "{enum#boolean}" ],
        "update" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "java.lens",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:setting.clicked|usages.clicked|implementations.clicked|related.problems.clicked}" ]
    }
  }, {
    "id" : "java.module.language.level",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:MODULE_LANGUAGE_LEVEL}" ],
      "event_data" : {
        "preview" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "java.refactoring.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "encapsulate.fields.use.accessors", "inheritance.to.delegation.delegate.other", "inline.class.search.in.comments", "inline.class.search.in.non.java", "inline.field.this.only.choice", "inline.local.this.only.choice", "inline.method.this.only.choice", "inline.super.class.this.only.choice", "introduce.constant.move.to.another.class", "introduce.constant.visibility", "introduce.field.visibility", "introduce.local.create.finals", "introduce.local.use.var", "introduce.parameter.create.finals", "introduce.parameter.delete.local", "introduce.parameter.replace.fields.with.getters", "introduce.parameter.use.initializer", "move.search.for.text", "move.search.in.comments", "rename.auto.inheritors", "rename.auto.overloads", "rename.auto.tests", "rename.auto.variables", "rename.search.for.text.for.class", "rename.search.for.text.for.field", "rename.search.for.text.for.method", "rename.search.for.text.for.package", "rename.search.for.text.for.variable", "rename.search.in.comments.for.class", "rename.search.in.comments.for.field", "rename.search.in.comments.for.method", "rename.search.in.comments.for.package", "rename.search.in.comments.for.variable", "extract.interface.javadoc", "extract.superclass.javadoc", "pull.up.members.javadoc" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "javadoc" : [ "{enum:as_is|copy|move|unknown}" ],
        "replace_fields_with_getters" : [ "{enum:none|inaccessible|all|unknown}" ],
        "visibility" : [ "{enum:public|protected|packageLocal|private|EscalateVisible|unknown}" ]
      }
    }
  }, {
    "id" : "javaLibraryJars",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:spring-integration|spring-integration-amqp|spring-amqp|spring-osgi|spring-data-commons|spring-data-jpa|spring-data-mongo|spring-data-neo4j|spring-data-solr|spring-data-hadoop|spring-data-jdbc-ext|spring-core|spring-boot|spring-ws|spring-mvc|spring-security|spring-batch|spring-security-oauth2|spring-security-oauth|apache-tiles|thymeleaf|velocity|freemarker|springOldJavaConfig|spring-cloud-commons|gorm|groovy|grails}", "{enum:micronaut|akka-java|vertx|spark-java|dropwizard|helidon|quarkus|ok3-http|apache-http|unirest|retrofit|spring-cloud|spring-webflux|reactor|rx-java|guice|drools|ktor|cucumber|selenium|selenide|serenity|appium|allure2|allure1|jdi-light|htmlelements|atlas|geb|webtau-http|webtau-browser|jbehave|robotframework|restassured|karate|citrus}", "{enum:eureka|consul|zookeeper|zuul|hystrix|apache-dubbo|grpc|apache-thrift|javalin|armeria|mybatis|jooq|junit4|junit5|testng|kafka-client|activemq-client|rabbitmq-client|amazon-sqs|tapestry5|gwt|struts2|jsf|vaadin-flow|openfeign|jhipster|apache-spark|apache-flink|fluentlenium|testcontainers|blade}", "{enum:javax-cdi|jakarta-cdi|javax-jms|jakarta-jms|javax-jpa|jakarta-jpa|javax-rs|jakarta-rs|r2dbc|osgi|microprofile-config|kotlin|kodein|http4k|rxkotlin}", "{enum:scala|play2|lagom-java|lagom-scala|kotless|spek|koin|gauge-java|apache-deltaspike|apache-deltaspike-data|graphql-java|hexagonkt|jdbi|jooby|optaplanner|spring-webflow}", "{enum:flowable-bpm|activiti-bpm|camunda-bpm|jbpm|apache-ignite|hazelcast|hazelcast-jet|coherence|debezium|streamex|json-path|hibernate|eclipselink-jpa|arquillian|flyway|liquibase|jodd-db|querydsl|apache-camel|rsocket-java|google-http-java-client|google-cloud-pubsub|springfox|apache-rocketmq|opentracing|zipkin2|jaeger}", "{enum:used.library}" ],
      "event_data" : {
        "library" : [ "{enum#__library}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__library" : [ "spring-integration", "spring-integration-amqp", "spring-amqp", "spring-osgi", "spring-data-commons", "spring-data-jpa", "spring-data-mongo", "spring-data-neo4j", "spring-data-solr", "spring-data-hadoop", "spring-data-jdbc-ext", "spring-core", "spring-boot", "spring-ws", "spring-mvc", "spring-security", "spring-batch", "spring-security-oauth2", "spring-security-oauth", "spring-webflow", "apache-tiles", "thymeleaf", "velocity", "freemarker", "springOldJavaConfig", "spring-cloud-commons", "gorm", "groovy", "grails", "micronaut", "akka-java", "vertx", "spark-java", "dropwizard", "helidon", "quarkus", "ok3-http", "apache-http", "unirest", "retrofit", "spring-cloud", "spring-webflux", "reactor", "rx-java", "guice", "drools", "ktor", "cucumber", "selenium", "selenide", "serenity", "appium", "allure2", "allure1", "jdi-light", "htmlelements", "atlas", "geb", "webtau-http", "webtau-browser", "jbehave", "robotframework", "restassured", "karate", "citrus", "eureka", "consul", "zookeeper", "zuul", "hystrix", "apache-dubbo", "grpc", "apache-thrift", "javalin", "armeria", "mybatis", "jooq", "junit4", "junit5", "testng", "kafka-client", "activemq-client", "rabbitmq-client", "amazon-sqs", "tapestry5", "gwt", "struts2", "jsf", "vaadin-flow", "openfeign", "jhipster", "apache-spark", "apache-flink", "fluentlenium", "testcontainers", "blade", "javax-cdi", "jakarta-cdi", "javax-jms", "jakarta-jms", "javax-jpa", "jakarta-jpa", "javax-rs", "jakarta-rs", "r2dbc", "osgi", "microprofile-config", "kotlin", "kodein", "http4k", "rxkotlin", "scala", "play2", "lagom-java", "lagom-scala", "kotless", "spek", "koin", "gauge-java", "apache-deltaspike", "apache-deltaspike-data", "graphql-java", "hexagonkt", "jdbi", "jooby", "optaplanner", "flowable-bpm", "activiti-bpm", "camunda-bpm", "jbpm", "apache-ignite", "hazelcast", "hazelcast-jet", "coherence", "debezium", "streamex", "json-path", "hibernate", "eclipselink-jpa", "arquillian", "flyway", "liquibase", "jodd-db", "querydsl", "apache-camel", "rsocket-java", "google-http-java-client", "google-cloud-pubsub", "springfox", "apache-rocketmq", "opentracing", "zipkin2", "jaeger" ]
      }
    }
  }, {
    "id" : "js.dialects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "DEFAULT", "ECMAScript_3", "ECMAScript_5.1", "JavaScript_1.6", "JavaScript_1.7", "JavaScript_1.8", "JavaScript_1.8.5", "ECMAScript_6", "React_JSX", "Nashorn_JS", "Flow" ]
      }
    }
  }, {
    "id" : "js.eslint.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "enabled", "node.interpreter.custom", "node.package.autodetect", "node.package.custom.package", "command.line.options.specified", "additional.rules.specified", "custom.config.specified" ]
      }
    }
  }, {
    "id" : "js.language.service",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started}" ],
      "event_data" : {
        "service" : [ "{enum#__service}" ]
      },
      "enums" : {
        "__service" : [ "TypeScriptServerServiceImpl", "ESLintLanguageService", "TsLintLanguageService", "VueTypeScriptService", "PrettierLanguageServiceImpl", "FlowJSLspService", "FlowJSCliService", "StandardJSService", "LanguageService", "third.party" ]
      }
    }
  }, {
    "id" : "js.language.service.starts",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "TypeScriptServerServiceImpl", "ESLintLanguageService", "TsLintLanguageService", "VueTypeScriptService", "PrettierLanguageServiceImpl", "FlowJSLspService", "FlowJSCliService", "StandardJSService", "LanguageService", "third.party" ]
      }
    }
  }, {
    "id" : "js.live.edit.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "node.update.{enum#state}", "chrome.update.{enum#state}", "chrome.update.on.changes.{enum#state}", "{enum#_}", "{enum:use.chrome.extension|chrome.update.on.changes|node.update.on.changes}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "use.chrome.extension", "chrome.update.on.changes", "node.update.on.changes" ]
      }
    }
  }, {
    "id" : "js.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:language.level|completion.only.type.based}" ],
      "event_data" : {
        "value" : [ "{enum#level}", "{enum#boolean}", "{enum#__value}" ]
      },
      "enums" : {
        "_" : [ "language.level", "completion.only.type.based" ],
        "__value" : [ "js_1_5", "es5", "js_1_6", "js_1_7", "js_1_8", "js_1_8_5", "es6", "jsx", "nashorn", "flow", "unknown" ],
        "level" : [ "js_1_5", "es5", "js_1_6", "js_1_7", "js_1_8", "js_1_8_5", "es6", "jsx", "nashorn", "flow", "unknown" ]
      }
    }
  }, {
    "id" : "js.tslint.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "enabled", "node.interpreter.custom", "node.package.autodetect", "node.package.custom.package", "additional.rules.specified", "custom.config.specified" ]
      }
    }
  }, {
    "id" : "json.schema",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:completion.by.schema.invoked}" ],
      "event_data" : {
        "schemaKind" : [ "{enum:builtin|schema|user|remote}" ]
      },
      "enums" : {
        "_" : [ "json.schema.schema.completion", "json.schema.builtin.completion", "json.schema.user.completion", "json.schema.remote.completion" ]
      }
    }
  }, {
    "id" : "jupyter.vars",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:jupyter.vars.click}" ]
    }
  }, {
    "id" : "keymaps.name",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#keymap}", "Custom_(Based_on_{enum#keymaps}_keymap)", "Custom_(Based_on_{enum#keymaps})", "{enum:ide.keymap}" ],
      "event_data" : {
        "based_on" : [ "{enum#keymaps}" ],
        "keymap_name" : [ "{enum#keymaps}" ]
      }
    }
  }, {
    "id" : "kotlin.gradle.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "android_gradle_plugin_version" : [ "{regexp#version}" ],
        "artifacts_download_speed" : [ "{regexp#integer}" ],
        "build_failed" : [ "{enum#boolean}" ],
        "build_src_count" : [ "{regexp#integer}" ],
        "build_src_exists" : [ "{enum#boolean}" ],
        "compilation_started" : [ "{enum#boolean}" ],
        "configuration_api_count" : [ "{regexp#integer}" ],
        "configuration_compile_count" : [ "{regexp#integer}" ],
        "configuration_implementation_count" : [ "{regexp#integer}" ],
        "configuration_runtime_count" : [ "{regexp#integer}" ],
        "cpu_number_of_cores" : [ "{regexp#integer}" ],
        "debugger_enabled" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_all_open" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_jpa_support" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_no_arg" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_sam_with_receiver" : [ "{enum#boolean}" ],
        "enabled_dagger" : [ "{enum#boolean}" ],
        "enabled_databinding" : [ "{enum#boolean}" ],
        "enabled_hmpp" : [ "{enum#boolean}" ],
        "enabled_kapt" : [ "{enum#boolean}" ],
        "executed_from_idea" : [ "{enum#boolean}" ],
        "gradle_build_cache_used" : [ "{enum#boolean}" ],
        "gradle_build_duration" : [ "{regexp#integer}" ],
        "gradle_build_number_in_current_daemon" : [ "{regexp#integer}" ],
        "gradle_daemon_heap_size" : [ "{regexp#integer}" ],
        "gradle_execution_duration" : [ "{regexp#integer}" ],
        "gradle_number_of_incremental_tasks" : [ "{regexp#integer}" ],
        "gradle_number_of_tasks" : [ "{regexp#integer}" ],
        "gradle_number_of_unconfigured_tasks" : [ "{regexp#integer}" ],
        "gradle_version" : [ "{regexp#version}" ],
        "gradle_worker_api_used" : [ "{enum#boolean}" ],
        "ides_installed" : [ "{regexp#all_ides}" ],
        "js_compiler_mode" : [ "{regexp#js_compiler_mode}" ],
        "js_generate_executable_default" : [ "{regexp#boolean_set}" ],
        "js_generate_externals" : [ "{enum#boolean}" ],
        "js_target_mode" : [ "{regexp#js_target_mode}" ],
        "jvm_compiler_ir_mode" : [ "{enum#boolean}" ],
        "jvm_defaults" : [ "{regexp#jvm_defaults}" ],
        "kotlin_api_version" : [ "{regexp#version}" ],
        "kotlin_compiler_version" : [ "{regexp#version}" ],
        "kotlin_coroutines_version" : [ "{regexp#version}" ],
        "kotlin_kts_used" : [ "{enum#boolean}" ],
        "kotlin_language_version" : [ "{regexp#version}" ],
        "kotlin_official_codestyle" : [ "{enum#boolean}" ],
        "kotlin_progressive_mode" : [ "{enum#boolean}" ],
        "kotlin_reflect_version" : [ "{regexp#version}" ],
        "kotlin_serialization_version" : [ "{regexp#version}" ],
        "kotlin_stdlib_version" : [ "{regexp#version}" ],
        "library_gwt_version" : [ "{regexp#version}" ],
        "library_hibernate_version" : [ "{regexp#version}" ],
        "library_spring_version" : [ "{regexp#version}" ],
        "library_vaadin_version" : [ "{regexp#version}" ],
        "maven_publish_executed" : [ "{enum#boolean}" ],
        "mpp_platforms" : [ "{regexp#mpp_platforms}" ],
        "number_of_subprojects" : [ "{regexp#integer}" ],
        "plugin_version" : [ "{regexp#plugin_version}" ],
        "statistics_collect_metrics_overhead" : [ "{regexp#integer}" ],
        "statistics_visit_all_projects_overhead" : [ "{regexp#integer}" ],
        "tests_executed" : [ "{enum#boolean}" ],
        "time_between_builds" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "Environment", "Kapt", "CompilerPlugins", "MPP", "JS", "Libraries", "GradleConfiguration", "ComponentVersions", "KotlinFeatures", "GradlePerformance", "UseScenarios" ]
      },
      "regexps" : {
        "all_ides" : "^((AS|OC|CL|IU|IC|WC)_?)+$",
        "boolean_set" : "^((true|false)_?)+$",
        "js_compiler_mode" : "^((ir|legacy|both|UNKNOWN)_?)+$",
        "js_target_mode" : "^((both|browser|nodejs|none)_?)+$",
        "jvm_defaults" : "^((disable|enable|compatibility|all|all-compatibility)_?)+$",
        "mpp_platforms" : "^((common|metadata|jvm|js|arm32|arm64|mips32|mipsel32|x64|android|androidApp|androidNativeArm|androidNativeArm32|android_arm32|androidNativeArm64|android_arm64|androidNative|androidNativeX86|androidNativeX64|iosArm|iosArm32|ios_arm32|iosArm64|ios_arm64|ios|ios_x64|iosSim|iosX64|watchos|watchosArm32|watchosArm64|watchosX86|tvos|tvosArm64|tvosX64|linux|linuxArm32Hfp|linux_arm32_hfp|linuxMips32|linux_mips32|linuxMipsel32|linux_mipsel32|linuxX64|linux_x64|macos|osx|macosX64|macos_x64|mingw|mingwX64|mingw_x64|mingwX86|mingw_X86|wasm32|wasm)_?)+$",
        "plugin_version" : "\\d\\.\\d\\.\\d{1,3}-(dev|eap|release)-(\\d+-)?(AppCode|CLion|IJ|Studio)[0-9\\-\\.]+"
      }
    }
  }, {
    "id" : "kotlin.gradle.target",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "plugin_version" : [ "{regexp#kotlin_version}", "@snapshot@" ]
      },
      "enums" : {
        "_" : [ "MPP.common", "MPP.common.metadata", "MPP.native", "MPP.native.androidNativeArm32", "MPP.native.androidNativeArm64", "MPP.native.macosX64", "MPP.native.linuxMips32", "MPP.native.linuxMipsel32", "MPP.native.linuxArm32Hfp", "MPP.native.linuxArm64", "MPP.native.linuxX64", "MPP.native.iosArm32", "MPP.native.iosArm64", "MPP.native.iosX64", "MPP.native.wasm32", "MPP.native.mingwX86", "MPP.native.mingwX64", "MPP.native.zephyrStm32f4Disco", "MPP.androidJvm", "MPP.androidJvm.android", "MPP.js", "MPP.js.js", "MPP.jvm", "MPP.jvm.jvm", "MPP.jvm.jvmWithJava", "kotlin-platform-common", "kotlin-platform-js", "kotlin-platform-jvm", "kotlin-android", "unknown" ]
      },
      "regexps" : {
        "kotlin_version" : "\\d\\.\\d\\.\\d{1,3}-(dev|eap|release)-(\\d+-)?(AppCode|CLion|IJ|Studio)[0-9\\-\\.]+"
      }
    }
  }, {
    "id" : "kotlin.ide.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Evaluation}" ],
      "event_data" : {
        "contextLanguage" : [ "{enum:Java|Kotlin|Other}" ],
        "evaluationType" : [ "{enum#__evaluationType}" ],
        "evaluator" : [ "{enum:Bytecode|Eval4j}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "status" : [ "{enum#__status}" ]
      },
      "enums" : {
        "__evaluationType" : [ "WATCH", "WINDOW", "POPUP", "FROM_JAVA", "UNKNOWN" ],
        "__status" : [ "Success", "DebuggerNotAttached", "DumbMode", "NoFrameProxy", "ThreadNotAvailable", "ThreadNotSuspended", "ProcessCancelledException", "InterpretingException", "EvaluateException", "SpecialException", "GenericException", "CannotFindVariable", "CoroutineContextUnavailable", "ParameterNotCaptured", "InsideDefaultMethod", "BackingFieldNotFound", "SuspendCall", "CrossInlineLambda", "Eval4JAbnormalTermination", "Eval4JUnknownException", "ExceptionFromEvaluatedCode", "ErrorElementOccurred", "FrontendException", "BackendException", "ErrorsInCode" ]
      }
    }
  }, {
    "id" : "kotlin.ide.editor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Completion|AddValToDataClassParameters}" ],
      "event_data" : {
        "choice_at_position" : [ "{regexp#integer}" ],
        "completion_event" : [ "{enum:chosen|not_chosen}" ],
        "completion_type" : [ "{enum:BASIC|SMART}" ],
        "file_type" : [ "{enum:KT|GRADLEKTS|KTS}" ],
        "finish_reason" : [ "{enum:DONE|CANCELLED|HIDDEN|INTERRUPTED}" ],
        "invocation_count" : [ "{regexp#integer}" ],
        "is_before_typing" : [ "{enum#boolean}" ],
        "is_val_added" : [ "{enum#boolean}" ],
        "lagging" : [ "{regexp#integer}" ],
        "on_symbol" : [ "{enum:comma|bracket|unknown}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "window_appearance_time" : [ "{regexp#integer}" ],
        "window_population_time" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "kotlin.ide.formatter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settings}" ],
      "event_data" : {
        "defaults" : [ "{enum:KOTLIN_OFFICIAL|KOTLIN_OLD_DEFAULTS|ide_defaults}" ],
        "kind" : [ "{enum#__kind}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__kind" : [ "IDEA_DEFAULT", "IDEA_CUSTOM", "IDEA_KOTLIN_WITH_CUSTOM", "IDEA_KOTLIN", "PROJECT_DEFAULT", "PROJECT_CUSTOM", "PROJECT_KOTLIN_WITH_CUSTOM", "PROJECT_KOTLIN", "IDEA_OFFICIAL_DEFAULT", "IDEA_OBSOLETE_KOTLIN", "IDEA_OFFICIAL_KOTLIN_WITH_CUSTOM", "PROJECT_OFFICIAL_DEFAULT", "PROJECT_OBSOLETE_KOTLIN", "PROJECT_OBSOLETE_KOTLIN_WITH_CUSTOM", "IDEA_OFFICIAL_KOTLIN" ]
      }
    }
  }, {
    "id" : "kotlin.ide.gradle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Import}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}", "{regexp#kotlin_version}" ],
        "target" : [ "{enum#__target}" ]
      },
      "enums" : {
        "__target" : [ "kotlin-android", "kotlin-platform-common", "kotlin-platform-js", "kotlin-platform-jvm", "MPP.androidJvm", "MPP.androidJvm.android", "MPP.common", "MPP.common.metadata", "MPP.js", "MPP.js.js", "MPP.jvm", "MPP.jvm.jvm", "MPP.jvm.jvmWithJava", "MPP.native", "MPP.native.androidNativeArm32", "MPP.native.androidNativeArm64", "MPP.native.iosArm32", "MPP.native.iosArm64", "MPP.native.iosX64", "MPP.native.linuxArm32Hfp", "MPP.native.linuxArm64", "MPP.native.linuxMips32", "MPP.native.linuxMipsel32", "MPP.native.linuxX64", "MPP.native.macosX64", "MPP.native.mingwX64", "MPP.native.mingwX86", "MPP.native.wasm32", "MPP.native.zephyrStm32f4Disco", "unknown" ]
      }
    }
  }, {
    "id" : "kotlin.ide.j2k",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Files|PSI_expression|Text_expression|Conversion}" ],
      "event_data" : {
        "Files_count" : [ "{regexp#integer}" ],
        "Is_new_J2K" : [ "{enum#boolean}" ],
        "Lines_count" : [ "{regexp#integer}" ],
        "Time" : [ "{regexp#integer}" ],
        "conversion_time" : [ "{regexp#integer}" ],
        "files_count" : [ "{regexp#integer}" ],
        "is_new_j2k" : [ "{enum#boolean}" ],
        "lines_count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "source_type" : [ "{enum:Files|PSI_expression|Text_expression}" ]
      }
    }
  }, {
    "id" : "kotlin.ide.migrationTool",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Notification|Run}" ],
      "event_data" : {
        "old_api_version" : [ "{regexp#version_lang_api}" ],
        "old_language_version" : [ "{regexp#version_lang_api}" ],
        "old_stdlib_version" : [ "{regexp#version_stdlib}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "regexps" : {
        "version_lang_api" : "\\d\\.\\d",
        "version_stdlib" : "\\d\\.\\d\\.\\d{1,3}"
      }
    }
  }, {
    "id" : "kotlin.ide.new.file",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Created}" ],
      "event_data" : {
        "file_template" : [ "{enum#__file_template}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__file_template" : [ "Kotlin_Class", "Kotlin_File", "Kotlin_Interface", "Kotlin_Data_Class", "Kotlin_Enum", "Kotlin_Sealed_Class", "Kotlin_Annotation", "Kotlin_Object", "Kotlin_Scratch", "Kotlin_Script", "Kotlin_Worksheet" ]
      }
    }
  }, {
    "id" : "kotlin.ide.new.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project_created|wizard_opened_by_hyperlink|module_template_created}" ],
      "event_data" : {
        "build_system" : [ "{enum:gradleKotlin|gradleGroovy|jps|maven}" ],
        "group" : [ "{enum:Java|Kotlin|Gradle}" ],
        "module_template" : [ "{enum:composeAndroid|composeDesktopTemplate|composeMppModule|consoleJvmApp|ktorServer|mobileMppModule|nativeConsoleApp|reactJsClient|simpleJsClient|simpleNodeJs|none}" ],
        "module_template_changed" : [ "{regexp#integer}" ],
        "modules_created" : [ "{regexp#integer}" ],
        "modules_removed" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}", "{regexp#kotlin_version}" ],
        "project_template" : [ "{enum#__project_template}", "{enum:composeDesktopApplication|composeMultiplatformApplication}" ]
      },
      "enums" : {
        "__project_template" : [ "JVM_|_IDEA", "JS_|_IDEA", "Kotlin/JVM", "Kotlin/JS", "Kotlin/JS_for_browser", "Kotlin/JS_for_Node.js", "Kotlin/Multiplatform_as_framework", "Kotlin/Multiplatform", "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "nodejsApplication", "none", "_IDEA", "JS_", "JVM_", "composeDesktopApplication", "composeMultiplatformApplication" ]
      }
    }
  }, {
    "id" : "kotlin.ide.new.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project_created|wizard_opened_by_hyperlink}" ],
      "event_data" : {
        "build_system" : [ "{enum:gradleKotlin|gradleGroovy|jps|maven}" ],
        "module_template_changed" : [ "{regexp#integer}" ],
        "modules_created" : [ "{regexp#integer}" ],
        "modules_removed" : [ "{regexp#integer}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "project_template" : [ "{enum#__project_template}" ]
      },
      "enums" : {
        "__project_template" : [ "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "none" ]
      }
    }
  }, {
    "id" : "kotlin.ide.refactoring.inline",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Launched}" ],
      "event_data" : {
        "element_type" : [ "{enum#__element_type}" ],
        "is_cross_lang" : [ "{enum#boolean}" ],
        "language_from" : [ "{util#lang}" ],
        "language_to" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__element_type" : [ "LAMBDA_EXPRESSION", "ANONYMOUS_FUNCTION", "LOCAL_VARIABLE", "PROPERTY", "TYPE_ALIAS", "UNKNOWN", "CONSTRUCTOR", "FUNCTION" ]
      }
    }
  }, {
    "id" : "kotlin.ide.refactoring.move",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Finished}" ],
      "event_data" : {
        "are_settings_changed" : [ "{enum#boolean}" ],
        "destination" : [ "{enum:PACKAGE|FILE|DECLARATION}" ],
        "entity" : [ "{enum#__entity}" ],
        "lagging" : [ "{regexp#integer}" ],
        "number_of_entities" : [ "{regexp#integer}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "succeeded" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__entity" : [ "FUNCTIONS", "CLASSES", "MIXED", "MPPCLASSES", "MPPFUNCTIONS", "MPPMIXED", "PACKAGE", "FILES" ]
      }
    }
  }, {
    "id" : "kotlin.ide.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:newInference|scriptingAutoReloadEnabled|addUnambiguousImportsOnTheFly|optimizeImportsOnTheFly}" ],
      "event_data" : {
        "definition_name" : [ "{enum#__definition_name}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__definition_name" : [ "KotlinInitScript", "KotlinSettingsScript", "KotlinBuildScript", "MainKtsScript", "Kotlin_Script", "Script_definition_for_extension_scripts_and_IDE_console" ]
      }
    }
  }, {
    "id" : "kotlin.project.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Build}" ],
      "event_data" : {
        "languageVersion" : [ "{regexp#float}" ],
        "platform" : [ "{enum:jvm|js|native|common}", "{enum:jvm|jvm.android|js|common|native.unknown|unknown|native.android_x64|native.android_x86|native.android_arm32|native.android_arm64|native.ios_arm32|native.ios_arm64|native.ios_x64|native.watchos_arm32|native.watchos_arm64|native.watchos_x86|native.watchos_x64|native.tvos_arm64|native.tvos_x64|native.linux_x64|native.mingw_x86|native.mingw_x64|native.macos_x64|native.linux_arm64|native.linux_arm32_hfp|native.linux_mips32|native.linux_mipsel32|native.wasm32}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "system" : [ "{enum:JPS|Maven|Gradle|unknown}" ]
      }
    }
  }, {
    "id" : "kubernetes.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:k8sVersion}" ],
      "event_data" : {
        "version" : [ "{regexp#version}", "unknown", "{enum:unknown}" ]
      }
    }
  }, {
    "id" : "kubernetes.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "inspection.remove.duplicate.envvar", "completion.kind", "completion.label.key", "navigation.gutter.label.container" ]
      }
    }
  }, {
    "id" : "lifecycle",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "command_line" : [ "{enum#boolean}" ],
        "debug_agent" : [ "{enum#boolean}" ],
        "duration_grouped" : [ "{regexp#integer}s", "-{regexp#integer}s", "{regexp#integer}s+" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "eap" : [ "{enum#boolean}" ],
        "error" : [ "{util#class_name}" ],
        "error_frames" : [ "{util#method_name}" ],
        "error_hash" : [ "{regexp#integer}" ],
        "error_size" : [ "{regexp#integer}" ],
        "headless" : [ "{enum#boolean}" ],
        "internal" : [ "{enum#boolean}" ],
        "memory_error_kind" : [ "{enum#__memory_error_kind}" ],
        "mode" : [ "{enum:new|same|attach}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "restart" : [ "{enum#boolean}" ],
        "test" : [ "{enum#boolean}" ],
        "too_many_errors" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "ide.error", "ide.freeze", "ide.start", "ide.close", "project.opening.finished", "project.opened", "project.closed", "frame.activated", "frame.deactivated", "project.module.attached", "project.frame.selected", "ide.crash.detected" ],
        "__memory_error_kind" : [ "heap", "min_heap", "perm_gen", "metaspace", "code_cache" ]
      }
    }
  }, {
    "id" : "light.edit",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:autosave.mode|open.file|open.in.project}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "open_place" : [ "{enum#__open_place}" ],
        "project_status" : [ "{enum:Open|Existing|New}" ]
      },
      "enums" : {
        "__open_place" : [ "LightEditOpenAction", "WelcomeScreenOpenAction", "CommandLine", "DragAndDrop", "RecentFiles" ]
      }
    }
  }, {
    "id" : "live.templates",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#live_template}", "{enum:started}" ],
      "event_data" : {
        "changedByUser" : [ "{enum#boolean}" ],
        "group" : [ "{util#live_template_group}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "microservices.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "endpoints_provider" : [ "{util#endpoint_provider_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "endpoints.groups.requested", "url.path.reference.variants", "url.path.segment.navigate", "mq.reference.variants", "mq.reference.navigate" ]
      }
    }
  }, {
    "id" : "ml.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:decorating.settings.changed|ranking.settings.changed|decorating.opinion.provided}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_by_default" : [ "{enum#boolean}" ],
        "opinion" : [ "{enum:LIKE|DISLIKE|NEUTRAL}" ],
        "ranker_id" : [ "{util#ml_completion_ranker_id}" ],
        "using_language_checkbox" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "module.facets",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#facets_type}", "{enum:module.with.facet}" ],
      "event_data" : {
        "facet" : [ "{util#facets_type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "move.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked|move.files.or.directories}" ],
      "event_data" : {
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "new.project.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "framework" : [ "{util#framework}" ],
        "generator_id" : [ "{util#class_name}" ],
        "gradle-kotlin-dsl" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "projectType" : [ "{util#project_type}" ]
      },
      "enums" : {
        "_" : [ "finish", "attempt", "finish.add.framework", "attempt.add.framework" ],
        "__event_id" : [ "finish", "attempt", "finish.add.framework", "attempt.add.framework", "project.generated" ]
      }
    }
  }, {
    "id" : "node.packages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:node_package}" ],
      "event_data" : {
        "name" : [ "{util#node.packages}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "nodejs.run.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:exec.params}" ],
      "event_data" : {
        "interpreter_type" : [ "{enum#__interpreter_type}" ]
      },
      "enums" : {
        "__interpreter_type" : [ "Local", "WSL", "Remote_sftp", "Remote_docker", "Remote_vagrant", "Remote_docker-compose", "Remote_ssh", "undefined", "third.party_remote", "Remote_unknown", "Unknown" ]
      }
    }
  }, {
    "id" : "notifications",
    "builds" : [ ],
    "versions" : [ {
      "from" : "40"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#class_name}", "{util#action}" ],
        "additional.display_id" : [ "{enum#notification_id}", "{util#notification_display_id}" ],
        "class" : [ "{util#class_name}" ],
        "display_id" : [ "{util#notification_display_id}" ],
        "display_type" : [ "{enum:BALLOON|STICKY_BALLOON|TOOL_WINDOW}", "{enum:NONE}" ],
        "id" : [ "{regexp:\\d+.\\d+}" ],
        "is_expandable" : [ "{enum#boolean}" ],
        "notification_group" : [ "{util#notification_group}", "{enum:JavaScript_Debugger_Console_URL_Starter}" ],
        "notification_place" : [ "{enum:BALLOON|EVENT_LOG}", "{enum:TOOL_WINDOW}" ],
        "parent" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "severity" : [ "{enum:ERROR|INFORMATION|WARNING}" ]
      },
      "enums" : {
        "__event_id" : [ "action.invoked", "balloon.collapsed", "balloon.expanded", "closed.by.user", "event.log.balloon.shown", "hyperlink.clicked", "logged", "settings.clicked", "shown" ],
        "notification_id" : [ "ignored.to.exclude.synchronization.notification", "externally.added.files.notification", "project.configuration.files.added.notification", "manage.ignore.files.notification", "github.missing.default.account", "github.pull.request.cannot.set.tracking.branch", "github.clone.unable.to.create.destination.dir", "github.clone.unable.to.find.destination", "github.open.in.browser.file.is.not.under.repo", "github.open.in.browser.cannot.get.last.revision", "github.rebase.success", "github.gist.cannot.create", "github.pull.request.cannot.load.branches", "github.pull.request.cannot.collect.additional.data", "github.pull.request.cannot.load.forks", "github.pull.request.failed.to.add.remote", "github.pull.request.push.failed", "github.pull.request.creation.error", "github.pull.request.cannot.collect.diff.data", "github.pull.request.cannot.find.repo", "github.pull.request.created", "github.pull.request.cannot.process.remote", "github.pull.request.no.current.branch", "github.rebase.cannot.validate.upstream.remote", "github.rebase.upstream.is.own.repo", "github.rebase.cannot.get.user.info", "github.rebase.cannot.retrieve.upstream.info", "github.rebase.cannot.configure.upstream.remote", "github.rebase.repo.not.found", "github.rebase.cannot.load.repo.info", "github.rebase.repo.is.not.a.fork", "github.share.cannot.find.git.repo", "github.share.cannot.create.repo", "github.share.project.successfully.shared", "github.share.empty.repo.created", "github.share.project.created.init.commit.failed", "github.share.init.push.failed", "github.gist.created", "github.git.repo.init.error", "unknown" ]
      }
    }
  }, {
    "id" : "os.file.type.association",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:os.association.created}" ],
      "event_data" : {
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "os.linux.wm",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:xdg.current.desktop}" ],
      "event_data" : {
        "value" : [ "{enum#__value}" ]
      },
      "enums" : {
        "_" : [ "KDE", "Gnome", "Ubuntu_Gnome", "Budgie_Gnome", "GNOME_Flashback_Unity", "GNOME_Flashback_Gnome", "pop_GNOME", "Awesome_GNOME", "X-Cinnamon", "Unity", "Unity7", "XFCE", "XDG_CURRENT_DESKTOP_is_empty", "i3", "MATE", "Pantheon", "Deepin", "LXDE", "LXQt", "Enlightenment", "UKUI", "X-Generic", "ICEWM", "Fluxbox", "default.desktop", "Unknown" ],
        "__value" : [ "LG3D", "KDE", "Gnome", "Gnome_Shell", "Gnome_Classic", "Ubuntu_Gnome", "Budgie_Gnome", "GNOME_Flashback_Unity", "GNOME_Flashback_Gnome", "GNOME_Flashback", "pop_GNOME", "Awesome_GNOME", "X-Cinnamon", "Unity", "Unity7", "XFCE", "XDG_CURRENT_DESKTOP_is_empty", "i3", "MATE", "Pantheon", "Deepin", "LXDE", "LXQt", "Enlightenment", "UKUI", "X-Generic", "ICEWM", "Fluxbox", "default.desktop", "Unknown", "empty" ]
      }
    }
  }, {
    "id" : "package.management.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "service" : [ "{enum#service_name}" ]
      },
      "enums" : {
        "_" : [ "install", "upgrade", "uninstall", "browseAvailablePackages" ],
        "service_name" : [ "Node.js", "Python", "Bower" ]
      }
    }
  }, {
    "id" : "packagesearch",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "enabled", "{enum#build_system}" ],
      "event_data" : {
        "event_data_1" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "build_system" : [ "maven", "gradle-groovy", "gradle-kts" ]
      }
    }
  }, {
    "id" : "packagesearch.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "build-system" : [ "{enum#build_system}" ],
        "gradle-groovy" : [ "{regexp#integer}" ],
        "gradle-kts" : [ "{regexp#integer}" ],
        "hit-min-order" : [ "{regexp#integer}" ],
        "ij" : [ "{regexp#integer}" ],
        "match-groups" : [ "{regexp#integer}" ],
        "match-items" : [ "{regexp#integer}" ],
        "maven" : [ "{regexp#integer}" ],
        "ok" : [ "{enum#boolean}" ],
        "query-size" : [ "{regexp#integer}" ],
        "query-tokens" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "open", "close", "close-cancel", "request", "project-info", "response", "response-failed", "installed" ],
        "build_system" : [ "maven", "gradle-groovy", "gradle-kts" ]
      }
    }
  }, {
    "id" : "performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ui.latency|ui.lagging}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.code.analysis",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:level_automatic_change_reverted|level_automatically_changed}" ],
      "event_data" : {
        "new_level" : [ "{regexp#version}", "{enum:unknown}" ],
        "old_level" : [ "{regexp#version}", "{enum:unknown}" ],
        "revert_from_level" : [ "{regexp#version}", "{enum:unknown}" ],
        "revert_to_level" : [ "{regexp#version}", "{enum:unknown}" ]
      }
    }
  }, {
    "id" : "php.codeGolf.ideFeaturesTrainer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:start|passed}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "lesson_id" : [ "{util#lesson_id}" ]
      }
    }
  }, {
    "id" : "php.command.line.tools.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:command.executed}" ],
      "event_data" : {
        "toolType" : [ "{enum#__toolType}" ]
      },
      "enums" : {
        "__toolType" : [ "unconfigured", "unknown", "custom", "zend1", "zend2", "symfony", "composer", "symfonyBasedTool", "drush", "wordPress" ]
      }
    }
  }, {
    "id" : "php.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:insert.fqcn|insert.namespace|insert.expected.argument}" ],
      "event_data" : {
        "type" : [ "{enum:constant|scalar|class.constant|function.call}" ]
      }
    }
  }, {
    "id" : "php.composer.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "configured" : [ "{enum#boolean}" ],
        "constraint" : [ "{enum:>|>=|-|~|^|=}" ],
        "default" : [ "{enum#boolean}" ],
        "dev" : [ "{enum#boolean}" ],
        "interpreterType" : [ "{enum#__interpreterType}" ],
        "libs" : [ "{enum#boolean}" ],
        "name" : [ "{util#composer_package}" ],
        "repository_type" : [ "{enum#__repository_type}" ],
        "settings" : [ "{enum:NOT_INITIALIZED|SYNCHRONIZE|DONT_SYNCHRONIZE}" ],
        "state" : [ "{enum:configured|foundInBaseDir|foundOutOfBaseDir|none}" ],
        "type" : [ "{enum:unknown|ExecutableComposerExecution|PharComposerExecution|ComposerRemoteInterpreterExecution}" ],
        "version" : [ "{enum:any|master|branch|undefined}", "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "package", "executor", "sync", "json", "repository" ],
        "__interpreterType" : [ "third.party", "unconfigured", "lost", "corrupted", "local", "vagrant", "docker", "docker-compose", "ssh-credentials", "web-deployment" ],
        "__repository_type" : [ "composer", "vcs", "git", "svn", "fossil", "hg", "pear", "package", "artifact", "path" ]
      }
    }
  }, {
    "id" : "php.composer.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:actionInvoked}" ],
      "event_data" : {
        "action" : [ "{enum#__action}" ],
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "__action" : [ "init", "addDependencyDialogShown", "create-project", "clear-cache", "diagnose", "dump-autoload", "install", "updateAll", "licenses", "self-update", "status", "validate", "updatePackage", "require", "remove", "runScriptFromContext", "editRunConfigFromContext", "createRunConfigFromContext", "updateDryRun" ]
      }
    }
  }, {
    "id" : "php.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "debugger" : [ "{enum:xdebug|ZendDebugger|unknown}" ],
        "equals_to_project_level" : [ "{enum#boolean}" ],
        "name" : [ "{enum#__name}" ],
        "php_level" : [ "{regexp#version}", "{enum:unknown|invalid.format}" ],
        "value" : [ "{enum:not.installed|installed}", "{enum#__value}" ],
        "with_mappings" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "debug.skip.path.total", "debug.server.total", "debug.server", "project.language.level", "default.interpreter", "interpreters.total", "interpreter", "php.code.style", "php.feature.usage" ],
        "__name" : [ "SHORT_ARRAY_SYNTAX", "TRAILING_COMMA_IN_FUNCTION_CALL", "ARRAY_DEREFERENCING", "CLASS_NAME_CONST", "TRAITS", "KEYWORD_NAMES", "CLASS_MEMBER_ACCESS_ON_INSTANTIATION", "THIS_IN_CLOSURE", "EMPTY_ANY_EXPRESSION", "COALESCE_OPERATOR", "IMMEDIATE_DEREFERENCING", "UNIFORM_VARIABLE_SYNTAX", "SCALAR_TYPE_HINTS", "RETURN_TYPES", "LIST_ASSIGN", "NULLABLES", "CLASS_CONSTANT_VISIBILITY", "SELF_IN_CLOSURE", "USE_FUNCTION_AND_CONST", "GENERATORS", "ARGUMENT_UNPACKING", "FINALLY", "VARIADIC_FUNCTIONS", "EXPONENTIATION", "CALL_TIME_PASS_BY_REFERENCE", "STATIC_IN_CLOSURE", "SPACESHIP_OPERATOR", "VAR_CONTINUE_ARGUMENT", "GROUPED_USE", "ANONYMOUS_CLASSES", "CATCH_MULTIPLE", "VAR_BREAK_ARGUMENT", "FLEXIBLE_HEREDOCS", "FOREACH_LIST", "BINARY_LITERAL", "RETURN_VOID", "PARENT_IN_CLOSURE", "OBJECT_TYPE_HINT", "ABSTRACT_FUNCTION_OVERRIDE", "TYPED_PROPERTIES", "LITERAL_IN_INSTANCEOF", "LITERAL_IN_STATIC_CALL", "VAR_BREAK_ZERO_ARGUMENT", "VAR_CONTINUE_ZERO_ARGUMENT" ],
        "__value" : [ "default", "edited", "third.party", "Zend", "PEAR", "WordPress", "Joomla!", "CodeIgniter", "PSR1/PSR2", "PSR12", "Laravel", "Symfony2", "Drupal" ]
      }
    }
  }, {
    "id" : "php.config.analysis",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:call.tree.analysis.depth|custom.format.functions|skip.constant.params|unchecked.exceptions}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.debug",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:config|session.started|session.ended|too.much.events}" ],
      "event_data" : {
        "autostart" : [ "{enum#boolean}" ],
        "connect_back" : [ "{enum#boolean}" ],
        "coverage" : [ "{enum#boolean}" ],
        "debugger" : [ "{enum:xdebug|Zend_Debugger}" ],
        "mode" : [ "{enum:req|jit}" ],
        "php_version" : [ "{regexp#version}", "{enum:unknown.format|unknown}" ],
        "profiler" : [ "{enum#boolean}" ],
        "type" : [ "{enum:zero_config|cli|web_server}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "php.find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:select.default.method.target}" ],
      "event_data" : {
        "base_method" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.frameworks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:integration.enabled}" ],
      "event_data" : {
        "framework" : [ "{enum:Drupal|Joomla|WordPress}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "php.include.path.custom",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:relative|non.composer|absolute|all}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.interpreters.default.name",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:default.name|custom.name|extended.name}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "interpreter_type" : [ "{enum#__interpreter_type}" ],
        "level" : [ "{enum:ide|project}" ]
      },
      "enums" : {
        "__interpreter_type" : [ "third.party", "local", "vagrant", "docker", "docker-compose", "ssh-credentials", "web-deployment" ]
      }
    }
  }, {
    "id" : "php.move.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished|started}" ],
      "event_data" : {
        "move_id" : [ "{enum#__move_id}", "{enum:move.unused.instance.method}" ],
        "status" : [ "{enum:succeed|cancelled}" ]
      },
      "enums" : {
        "__move_id" : [ "move.instance.method", "move.static.members", "make.static.then.move", "move.function", "move.class", "move.file.constant", "move.namespace" ]
      }
    }
  }, {
    "id" : "php.new.action",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "add.new.test", "add.new.class", "add.new.file", "{enum:add.new.class|add.new.class.fields.usage|add.new.test|add.new.test.fields.usage}" ],
      "event_data" : {
        "action_id" : [ "{enum#new_test_actions}", "{util#class_name}" ],
        "directory_was_changed" : [ "{enum#boolean}" ],
        "extension" : [ "{enum#file_extensions}" ],
        "extension_was_changed" : [ "{enum#boolean}" ],
        "file_name_was_changed" : [ "{enum#boolean}" ],
        "framework" : [ "{enum#test_frameworks}" ],
        "implements_table_was_changed" : [ "{enum#boolean}" ],
        "library_was_changed" : [ "{enum#boolean}" ],
        "method_count" : [ "{regexp#integer}" ],
        "methods_table_was_changed" : [ "{enum#boolean}" ],
        "namespace_was_changed" : [ "{enum#boolean}" ],
        "show_inherited_members_was_changed" : [ "{enum#boolean}" ],
        "source" : [ "empty", "interface", "trait", "class", "{enum:empty|interface|trait|class}" ],
        "super_fqn_was_changed" : [ "{enum#boolean}" ],
        "target" : [ "class", "method", "none", "{enum:class|method|none}" ],
        "template_was_changed" : [ "{enum#boolean}" ],
        "test_target_text_was_changed" : [ "{enum#boolean}" ],
        "type" : [ "PHP_Class", "PHP_Trait", "PHP_Interface", "custom", "{enum:PHP_Class|PHP_Interface|PHP_Trait|custom}" ],
        "with_custom_vars" : [ "{enum#boolean}" ],
        "with_inherit_member" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "file_extensions" : [ "ctp", "hphp", "inc", "module", "php", "php4", "php5", "phtml" ],
        "new_test_actions" : [ "PHPUnit_Test", "Test", "PhpUnitNewTestFromClass", "PhpNewTest", "CodeceptionNewUnitTestFromClass", "third.party" ],
        "test_frameworks" : [ "PHPUnit", "PHPUnit_6+", "PHPSpec", "Codeception_Unit", "Codeception_Functional", "third.party" ]
      }
    }
  }, {
    "id" : "php.phing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:build.file}" ]
    }
  }, {
    "id" : "php.rename.constructor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:rename.to.construct|rename.class}" ]
    }
  }, {
    "id" : "php.server.skipped.paths",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#integer}" ]
    }
  }, {
    "id" : "php.stubs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:all.extensions.default|extension}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "name" : [ "{util#php_stub_extension}" ]
      }
    }
  }, {
    "id" : "php.test.framework",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured.test.framework}" ],
      "event_data" : {
        "config_type" : [ "{enum:CUSTOM_LOADER|PHPUNIT_PHAR|INCLUDE_PATH}" ],
        "framework" : [ "{enum:phpunit|behat|codeception|phpspec}" ],
        "level" : [ "{enum:ide|project}" ],
        "version" : [ "{regexp#version}", "{enum:unknown}" ]
      }
    }
  }, {
    "id" : "php.twig.injection",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:twig.injection.rules}" ],
      "event_data" : {
        "value" : [ "{enum:modified}" ]
      }
    }
  }, {
    "id" : "php.workshop",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:workshop}" ],
      "event_data" : {
        "distribution" : [ "{enum:docker}" ]
      }
    }
  }, {
    "id" : "platform.installer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Update_Manager}" ],
      "event_data" : {
        "value" : [ "{enum:Toolbox_App|Snap|IDE}", "{enum:Other}" ]
      }
    }
  }, {
    "id" : "platform.registry",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:registry|experiment}" ],
      "event_data" : {
        "id" : [ "{util#registry_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "platform.registry.application",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#registry_key}" ]
    }
  }, {
    "id" : "plugins",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:disabled.plugin|enabled.not.bundled.plugin}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "plugins.advertiser",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "plugins" : [ "{util#plugin}" ],
        "source" : [ "{enum:editor|notification}" ]
      },
      "enums" : {
        "__event_id" : [ "install.plugins", "ignore.extensions", "open.download.page", "ignore.ultimate", "ignore.unknown.features", "enable.plugins", "configure.plugins" ]
      }
    }
  }, {
    "id" : "plugins.disabled",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#plugin}" ]
    }
  }, {
    "id" : "plugins.dynamic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:load|unload.fail|unload.success}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{enum:unknown}" ]
      }
    }
  }, {
    "id" : "plugins.non.bundled",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#plugin}" ]
    }
  }, {
    "id" : "pprof.profiler.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:profiler.used}" ],
      "event_data" : {
        "profiler_id" : [ "{util#pprof_profiler_id}" ]
      }
    }
  }, {
    "id" : "productivity",
    "builds" : [ ],
    "versions" : [ {
      "from" : "11"
    } ],
    "rules" : {
      "event_id" : [ "{util#productivity}", "{enum:feature.used}" ],
      "event_data" : {
        "group" : [ "{util#productivity_group}" ],
        "id" : [ "{util#productivity}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "profiler.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:absolute_time|short_time}" ]
      },
      "enums" : {
        "__event_id" : [ "tabNameFormat", "filterCalls", "hideLessOnePercents", "showCalleesList", "showPercentsOfRoot", "icicleGraph", "stickyText", "focusOnSearch" ]
      }
    }
  }, {
    "id" : "profiler.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "load_time" : [ "{regexp#integer}" ],
        "name" : [ "{enum:flameGraph|callTree|methodList}" ],
        "profiler_configuration_type" : [ "{util#profiler_configuration_type}" ],
        "run_configuration_type" : [ "{util#run_config}" ],
        "size" : [ "{regexp#integer}" ],
        "type" : [ "{util#profiler_snapshot_type}" ]
      },
      "enums" : {
        "__event_id" : [ "execute", "start", "snapshot.generated", "attach", "tree.recursion.collapse", "tree.recursion.checkbox", "snapshot.open", "tab.open" ]
      }
    }
  }, {
    "id" : "project.fs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:case-sensitivity|roots-watched}" ],
      "event_data" : {
        "cs-implicit" : [ "{enum#boolean}" ],
        "cs-project" : [ "{enum#boolean}" ],
        "cs-system" : [ "{enum#boolean}" ],
        "pct-non-watched" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "system_id" : [ "{enum#build_tools}" ],
        "task_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "project.indexable.files",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:all.indexable.files|content.indexable.files}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.structure",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "modules.count.{regexp#count}", "content.roots.count.{regexp#count}", "source.roots.count.{regexp#count}", "source.root.cookbooks-root.{regexp#count}", "source.root.java-resource.{regexp#count}", "source.root.java-source.{regexp#count}", "source.root.java-test-resource.{regexp#count}", "source.root.java-test.{regexp#count}", "source.root.kotlin-resource.{regexp#count}", "source.root.kotlin-source.{regexp#count}", "source.root.kotlin-test-resource.{regexp#count}", "source.root.kotlin-test.{regexp#count}", "excluded.roots.count.{regexp#count}", "{enum:package.prefix.used|package.prefix.not.used}", "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#count}", "{regexp#integer}" ],
        "type" : [ "{enum#type}", "{enum#__type}" ]
      },
      "enums" : {
        "_" : [ "modules.total", "content.roots.total", "source.roots.total", "excluded.roots.total", "package.prefix", "source.root" ],
        "__event_id" : [ "modules.total", "content.roots.total", "source.roots.total", "excluded.roots.total", "package.prefix", "source.root", "named.scopes.total.local", "named.scopes.total.shared" ],
        "__type" : [ "cookbooks-root", "java-resource", "java-source", "java-test-resource", "java-test", "kotlin-resource", "kotlin-source", "kotlin-test-resource", "kotlin-test" ],
        "type" : [ "cookbooks-root", "java-resource", "java-source", "java-test-resource", "java-test", "kotlin-resource", "kotlin-source", "kotlin-test-resource", "kotlin-test" ]
      }
    }
  }, {
    "id" : "project.view.pane",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:current}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{enum:unknown}" ],
        "scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "project.view.pane.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changed}" ],
      "event_data" : {
        "from_class_name" : [ "{util#class_name}" ],
        "from_scope_class_name" : [ "{util#class_name}" ],
        "to_class_name" : [ "{util#class_name}" ],
        "to_scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "python.interpreter.remote",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "local", "Remote_Web_Deployment", "Remote_Docker_Compose", "Remote_Docker", "Remote_Vagrant", "Remote_SSH_Credentials", "Remote_WSL" ]
      }
    }
  }, {
    "id" : "python.interpreter.version",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#integer}" ]
    }
  }, {
    "id" : "python.namespace.packages.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:namespace.package.apply.in.root.provider|namespace.package.created|namespace.package.mark.or.unmark}" ],
      "event_data" : {
        "is_mark" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "python.packages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "python_package_installed", "{util#python_package}", "{enum:python_package_installed}" ],
      "event_data" : {
        "executionType" : [ "{enum#executionType}", "{enum#__executionType}" ],
        "interpreterType" : [ "{enum#interpreterType}", "{enum:pipenv|condavenv|virtualenv|regular}" ],
        "package" : [ "{util#python_packages}" ],
        "package_version" : [ "{regexp#version}" ],
        "python_version" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ],
        "executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ],
        "interpreterType" : [ "pipenv", "condavenv", "virtualenv", "regular" ]
      }
    }
  }, {
    "id" : "python.professional",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "django_used", "flask_used", "app_engine_used", "template_engine", "{enum:django_used|flask_used|app_engine_used|template_engine}" ],
      "event_data" : {
        "executionType" : [ "{enum#executionType}", "{enum#__executionType}" ],
        "interpreterType" : [ "{enum#interpreterType}", "{enum:pipenv|condavenv|virtualenv|regular}" ],
        "py_template_language" : [ "{enum#pyTemplateLanguage}", "{enum#__py_template_language}" ],
        "python_version" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ],
        "__py_template_language" : [ "DjangoTemplate", "Mako", "Jinja2", "Chameleon", "Web2Py" ],
        "executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ],
        "interpreterType" : [ "pipenv", "condavenv", "virtualenv", "regular" ],
        "pyTemplateLanguage" : [ "DjangoTemplate", "Mako", "Jinja2", "Chameleon", "Web2Py" ]
      }
    }
  }, {
    "id" : "python.scientific",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:matplotlib_in_toolwindow_used|sci_view_used|data_view_toolwindow_used}" ],
      "event_data" : {
        "executionType" : [ "{enum#__executionType}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular}" ],
        "python_version" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ]
      }
    }
  }, {
    "id" : "python.sdks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:python_sdk_used}" ],
      "event_data" : {
        "executionType" : [ "{enum#__executionType}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular}" ],
        "python_version" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ]
      }
    }
  }, {
    "id" : "r.interpreters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:setup.interpreter}" ],
      "event_data" : {
        "is_conda" : [ "{enum#boolean}" ],
        "suggested" : [ "{regexp:(\\d+\\.?)*\\d+_(true|false)}" ],
        "version" : [ "{regexp#version}", "{enum:unknown}" ]
      }
    }
  }, {
    "id" : "r.workflow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:call.method.from.console}" ],
      "event_data" : {
        "name" : [ "{enum:install.packages|install_github}" ]
      }
    }
  }, {
    "id" : "reactivestreams.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:postfix.completion.used|customized.stackframe.selected}" ],
      "event_data" : {
        "reactivestreams_implementation" : [ "{enum:Reactor|RxJava}" ]
      }
    }
  }, {
    "id" : "refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked}" ],
      "event_data" : {
        "element" : [ "{util#class_name}" ],
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "refactoring.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:open.in.editor.saved|open.in.editor.shown}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "selected" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "remote.sdk.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:configured.sdk}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "level" : [ "{enum:ide|project}" ],
        "sdk_type" : [ "{enum#__sdk_type}" ]
      },
      "enums" : {
        "_" : [ "Docker_Compose", "Docker", "Web_Deployment", "Vagrant", "SSH_Credentials", "WSL", "Unknown" ],
        "__sdk_type" : [ "Docker_Compose", "Docker", "Web_Deployment", "Vagrant", "SSH_Credentials", "WSL", "unknown" ]
      }
    }
  }, {
    "id" : "remote.sdk.type.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "PHP_Docker_Compose", "PHP_Docker" ]
      }
    }
  }, {
    "id" : "rename.inplace.popup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:hide|openRenameDialog|settingsChanged|show}" ],
      "event_data" : {
        "changedOnHide" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "linkUsed" : [ "{enum#boolean}" ],
        "search_in_comments_on_hide" : [ "{enum#boolean}" ],
        "search_in_text_occurrences_on_hide" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rename.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|executed|reference.processed}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "reference_class" : [ "{util#class_name}" ],
        "rename_processor" : [ "{util#class_name}" ],
        "scope_type" : [ "{enum#__scope_type}" ],
        "search_in_comments" : [ "{enum#boolean}" ],
        "search_in_text_occurrences" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__scope_type" : [ "project", "test", "tests", "production", "module", "current file", "current_file", "third.party", "unknown" ]
      }
    }
  }, {
    "id" : "ruby.all.sdks",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#integer}", "{enum:sdks}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ruby.gems.names",
    "builds" : [ {
      "from" : "191.4811",
      "to" : "192.0"
    }, {
      "from" : "192.1821"
    } ],
    "rules" : {
      "event_id" : [ "{util#ruby_gem}", "{enum:configured.gem}" ],
      "event_data" : {
        "dependence" : [ "{enum:explicit|optional|implicit}" ],
        "name" : [ "{util#ruby_gem}" ],
        "version" : [ "{regexp#version}", "{enum:unknown.format}" ]
      }
    }
  }, {
    "id" : "ruby.gems.versions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "bundled({regexp#version})", "bundled({regexp#version}.dev)", "bundled({regexp#version}.pre.alpha)", "bundled({regexp#version}.beta.{regexp#integer})", "[path]", "{regexp#version}", "{regexp#version}.beta{regexp#integer}", "{regexp#version}.alpha", "{regexp#version}alpha", "{regexp#version}.alpha{regexp#integer}", "{regexp#version}.rc.{regexp#integer}", "{regexp#version}.rc{regexp#integer}", "{regexp#version}.pre.{regexp#integer}", "{regexp#version}.pre{regexp#integer}", "{regexp#version}.dev", "{regexp#version}.beta.{regexp#version}", "{regexp#version}.pre", "{regexp#version}.pre.beta", "{regexp#version}.beta", "{regexp#version}.pre.alpha", "{regexp#version}.beta.{regexp#integer}", "{regexp#version}.pre.GGS", "{regexp#version}.pre.ithaka", "{regexp#version}.pre.corejavascript" ]
    }
  }, {
    "id" : "ruby.gemsets.seventh.eighth.percentile",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "rvm_{regexp#integer}", "rbenv_{regexp#integer}", "{enum:rvm|rbenv}", "{enum:gemset}" ],
      "event_data" : {
        "type" : [ "{enum:rbenv|rvm}" ],
        "value" : [ "{regexp#float}", "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ruby.not.empty.gemsets",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "rvm_{regexp#version}", "rvm_{regexp#version}_{regexp#version}", "rbenv_{regexp#version}", "rbenv_{regexp#version}_{regexp#version}", "{enum:rvm|rbenv}", "{enum:gemset}" ],
      "event_data" : {
        "average" : [ "{regexp#float}" ],
        "type" : [ "{enum:rbenv|rvm}" ],
        "value" : [ "{regexp#version}", "{regexp#float}" ]
      }
    }
  }, {
    "id" : "ruby.project.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "rails_{regexp#version}", "rails_{regexp#version}_{regexp#version}", "rails_unknown", "{enum#_}", "{enum:project.type}" ],
      "event_data" : {
        "type" : [ "{enum:plain_ruby|rails|gem|motion}" ],
        "version" : [ "unknown", "unknown.format", "{regexp#version}", "{enum:unknown|unknown.format}" ]
      },
      "enums" : {
        "_" : [ "rails", "plain_ruby", "gem", "motion" ]
      }
    }
  }, {
    "id" : "ruby.sdk.version",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "rbenv__{regexp#version}", "ruby-{regexp#version}-p{regexp#integer}", "{enum:ruby_sdk}" ],
      "event_data" : {
        "host_type" : [ "{enum#__host_type}" ],
        "ruby_type" : [ "{enum#__ruby_type}" ],
        "version" : [ "{regexp#version}" ],
        "version_manager" : [ "{enum#__version_manager}" ]
      },
      "enums" : {
        "__host_type" : [ "Local", "Missing", "Unknown_Remote", "Unnamed_Remote", "Unknown", "Web_Deployment", "Vagrant", "SSH_Credentials", "WSL", "Docker", "Docker_Compose" ],
        "__ruby_type" : [ "jruby", "ruby", "rbx", "truffleruby", "Missing" ],
        "__version_manager" : [ "asdf", "chruby", "rvm", "rbenv", "system" ]
      }
    }
  }, {
    "id" : "ruby.version.managers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:third.party}", "{enum#_}", "{enum:manager}" ],
      "event_data" : {
        "value" : [ "{enum#__value}" ]
      },
      "enums" : {
        "_" : [ "RvmVersionManagerHandler", "RubySystemVersionManagerHandler", "RbenvVersionManagerHandler", "ChrubyVersionManagerHandler", "AsdfVersionManagerHandler", "system", "rbenv", "rvm" ],
        "__value" : [ "RvmVersionManagerHandler", "RubySystemVersionManagerHandler", "RbenvVersionManagerHandler", "ChrubyVersionManagerHandler", "AsdfVersionManagerHandler" ]
      }
    }
  }, {
    "id" : "run.configuration.exec",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config_factory}", "{enum:started|ui.shown|finished}" ],
      "event_data" : {
        "additional.lang" : [ "{util#lang}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "factory" : [ "{util#run_config_factory}" ],
        "id" : [ "{util#run_config_id}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "target" : [ "{util#run_target}" ]
      }
    }
  }, {
    "id" : "run.configuration.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config_factory}", "{enum:configured.in.project|feature.used}" ],
      "event_data" : {
        "activate_before_run" : [ "{enum#boolean}" ],
        "additional.lang" : [ "{util#lang}" ],
        "count" : [ "{regexp#integer}" ],
        "edit_before_run" : [ "{enum#boolean}" ],
        "factory" : [ "{util#run_config_factory}" ],
        "featureName" : [ "{util#plugin_info}" ],
        "id" : [ "{util#run_config_id}" ],
        "parallel" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "shared" : [ "{enum#boolean}" ],
        "target" : [ "{util#run_target}" ],
        "temporary" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "run.configuration.type.temp",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config}" ],
      "event_data" : {
        "activate_before_run" : [ "{enum#boolean}" ],
        "edit_before_run" : [ "{enum#boolean}" ],
        "parallel" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "shared" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "run.dashboard",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "run.dashboard.{enum#state}", "{enum:run.dashboard|third.party}", "{util#run_config}", "{enum:run.dashboard|added.run.configuration}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "factory" : [ "{util#run_config_factory}" ],
        "id" : [ "{util#run_config_id}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "search.everywhere.filters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:contributor.changed|file.type.changed|lang.changed|quick.filter.button}" ],
      "event_data" : {
        "buttonName" : [ "{enum:ALL|NONE|INVERT}" ],
        "contributorID" : [ "{util#se_contributor}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fileType" : [ "{util#file_type}" ],
        "langID" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "searchEverywhere",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "contributorID" : [ "{enum#__contributorID}" ],
        "currentTabId" : [ "{enum#__currentTabId}" ],
        "input_event" : [ "{util#shortcut}" ],
        "lang" : [ "{util#lang}" ],
        "selectedItemNumber" : [ "{regexp#integer}" ],
        "typedNavigationKeys" : [ "{regexp#integer}" ],
        "typedSymbolKeys" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__contributorID" : [ "FileSearchEverywhereContributor", "SearchEverywhereContributor.All", "ClassSearchEverywhereContributor", "RecentFilesSEContributor", "ActionSearchEverywhereContributor", "SymbolSearchEverywhereContributor", "TopHitSEContributor", "RunConfigurationsSEContributor", "YAMLKeysSearchEverywhereContributor", "CommandsContributor", "third.party", "UrlSearchEverywhereContributor", "GitSearchEverywhereContributor" ],
        "__currentTabId" : [ "FileSearchEverywhereContributor", "SearchEverywhereContributor.All", "ClassSearchEverywhereContributor", "ActionSearchEverywhereContributor", "SymbolSearchEverywhereContributor", "third.party" ],
        "__event_id" : [ "dialogOpen", "tabSwitched", "navigateThroughGroups", "contributorItemChosen", "moreItemChosen", "commandUsed", "commandCompleted", "dialogClosed", "sessionFinished" ]
      }
    }
  }, {
    "id" : "settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:not.default}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "bool", "int", "float", "{enum:bool|int|float}", "{enum#__type}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      },
      "enums" : {
        "_" : [ "GeneralSettings", "NotRoamableUiSettings", "UISettings", "PhpDebugGeneral", "PhpRefactoringSettings", "not.default", "invoked" ],
        "__type" : [ "bool", "int", "float", "enum", "string" ]
      }
    }
  }, {
    "id" : "settings.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "47"
    } ],
    "rules" : {
      "event_id" : [ "{enum:component_changed_option|component_changed}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      },
      "enums" : {
        "__type" : [ "bool", "int", "float", "enum", "string" ]
      }
    }
  }, {
    "id" : "settings.repository",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:sync.settings}" ],
      "event_data" : {
        "sync_type" : [ "{enum:merge|overwrite_local|overwrite_remote}" ]
      }
    }
  }, {
    "id" : "shared.indexes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:local.index.loaded|downloaded|attached|attach.failed.incompatible}" ],
      "event_data" : {
        "averageDownloadSpeed" : [ "{regexp#integer}" ],
        "downloadTime" : [ "{regexp#integer}" ],
        "indexId" : [ "{regexp#hash}" ],
        "kind" : [ "{enum#kind_enum}" ],
        "matchingFbIndexes" : [ "{regexp#integer}" ],
        "matchingStubIndexes" : [ "{regexp#integer}" ],
        "mismatchingFbIndexes" : [ "{util#index_id}" ],
        "mismatchingStubIndexes" : [ "{util#index_id}" ],
        "numberOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "packedSize" : [ "{regexp#integer}" ],
        "redundantFbIndexes" : [ "{regexp#integer}" ],
        "redundantStubIndexes" : [ "{regexp#integer}" ],
        "totalSizeOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "unpackedSize" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "kind_enum" : [ "project", "jdk", "mvn", "other" ]
      }
    }
  }, {
    "id" : "shell.script",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "FilePathCompletionUsed", "BaseKeywordCompletionUsed", "ConditionKeywordCompletionUsed", "GenerateActionUsed", "ExternalFormatterDownloaded", "RenamingActionUsed", "QuickFixUsed", "SuppressInspectionUsed", "DisableInspectionUsed", "ExternalAnnotatorDownloaded", "DocumentationProviderUsed", "ExplainShellUsed" ]
      }
    }
  }, {
    "id" : "spellchecker.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:add.to.accepted.words.ui|remove.from.accepted.words.ui}" ]
    }
  }, {
    "id" : "spellchecker.settings.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{enum:project-level|application-level}" ]
      },
      "enums" : {
        "__event_id" : [ "all.bundled.enabled", "max.spellchecker.suggestions", "custom.dict.count", "use.single.dict.to.save", "default.dict.to.save" ]
      }
    }
  }, {
    "id" : "spring.boot",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "SpringBootDevTools", "SpringBootModulesPerProject_{regexp#integer}", "application.properties", "bootstrap.properties", "additional-spring-configuration-metadata.json", "application.{enum:yml|yaml}", "bootstrap.{enum:yml|yaml}", "devtools.{enum:properties|yml|yaml}", "ConfigurationProperties_{regexp#integer}", "NestedConfigurationProperty_{regexp#integer}", "ConfigurationProperties_Methods_{regexp#integer}", "{enum#metrics}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "extension" : [ "{enum:properties|yml|yaml|json|unknown}" ],
        "files" : [ "{regexp#count}" ],
        "modules" : [ "{regexp#count}" ],
        "name" : [ "{enum:application|bootstrap|additional-spring-configuration-metadata|devtools}" ]
      },
      "enums" : {
        "metrics" : [ "configuration.file", "configuration.properties", "configuration.properties.methods", "nested.configuration.properties", "spring.boot.dev.tools", "spring.boot.modules.per.project" ]
      }
    }
  }, {
    "id" : "spring.boot.mvc.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "_" : [ "EditLiveRequestMapping", "DefaultRequestNavigator", "RestClientRequestEditorNavigator", "RestClientRequestRunnerNavigator" ]
      }
    }
  }, {
    "id" : "spring.boot.run",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "configs.count_{regexp#integer}", "config.active.profiles.set.{enum:on|off}", "config.hide.banner.{enum:on|off}", "config.debug.mode.{enum:on|off}", "config.enable.launch.optimization.{enum:on|off}", "config.enable.jmx.agent.{enum:on|off}", "config.include.provided.scope.{enum:on|off}", "config.additional.params.total_{regexp#integer}", "config.additional.params.enabled_{regexp#integer}", "config.additional.params.disabled_{regexp#integer}", "run.dashboard.{enum:on|off}", "configs.main.class.count_{regexp#integer}", "endpoints.beans.diagram.{enum#state}", "config.update.action.update.policy.{enum#_}", "config.frame.deactivation.update.policy.{enum#_}", "{enum#metrics}" ],
      "event_data" : {
        "count" : [ "{regexp#count}", "{enum:<1}" ],
        "count_group" : [ "{regexp#count}", "{enum:<1}" ],
        "enabled" : [ "{enum#boolean}" ],
        "params" : [ "{regexp#integer}" ],
        "value" : [ "{enum#_}" ]
      },
      "enums" : {
        "_" : [ "Nothing", "third.party", "UpdateClassesAndResources", "UpdateClassesAndTriggerFile", "UpdateResources", "UpdateTriggerFile" ],
        "metrics" : [ "spring.boot.run.configs", "run.dashboard", "endpoints.beans.diagram", "configs.main.class", "config.update.action.update.policy", "config.include.provided.scope", "config.hide.banner", "config.frame.deactivation.update.policy", "config.enable.launch.optimization", "config.enable.jmx.agent", "config.debug.mode", "config.additional.params.total", "config.additional.params.enabled", "config.additional.params.disabled", "config.active.profiles.set" ]
      }
    }
  }, {
    "id" : "spring.boot.run.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "_" : [ "LiveBeansNavigationHandler", "EditRuntimeBean", "EditRuntimeResource" ]
      }
    }
  }, {
    "id" : "startup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:bootstrap|splash|appInit|totalDuration}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "statistics.go.compilation.error.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#trigger}" ]
    }
  }, {
    "id" : "statistics.go.debugger.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debugger.usage|local.attach}" ]
    }
  }, {
    "id" : "statistics.go.dependencyManager",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "vgo", "Glide", "GoGradle", "Trash", "GoDep", "Dep" ]
      }
    }
  }, {
    "id" : "statistics.go.inspection.reports.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#trigger}" ]
    }
  }, {
    "id" : "statistics.go.postfix.template.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "!", "&", ".rrv", ".copy", ".for", ".forr", ".par", ".complex", ".reterrexpr", ".nn", ".cap", ".not", ".panic", ".sort", ".retervar", ".notnil", ".close", ".print", ".delete", ".return", ".var", ".p", ".imag", ".rr", ".reterr", ".pointer", ".println", ".nil", ".if", ".real", ".len", ".rre", ".append", ".reterrvar" ]
      }
    }
  }, {
    "id" : "statistics.go.runtime.error.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#ver}-{enum#_}" ],
      "enums" : {
        "_" : [ "test.cgo.argument.has.Go.pointer.to.Go.pointer", "test.close.of.nil.channel", "test.slice.bounds.out.of.range", "test.assignment.to.entry.in.nil.map", "test.invalid.memory.address.or.nil.pointer.dereference", "test.makeslice.cap.out.of.range", "test.integer.divide.by.zero", "test.close.of.closed.channel", "test.comparing.uncomparable.type", "test.hash.of.unhashable.type", "test.index.out.of.range", "test.send.on.closed.channel", "test.value.method.called.using.nil.pointer", "test.growslice.cap.out.of.range" ],
        "ver" : [ "v0.1", "v0.1-" ]
      }
    }
  }, {
    "id" : "statistics.go.sdk",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#version}", "devel", "{regexp#version}beta{regexp#integer}", "{regexp#version}rc{regexp#integer}" ]
    }
  }, {
    "id" : "statistics.go.sdk.major",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#version}" ]
    }
  }, {
    "id" : "statistics.go.settings.codeStyle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "addParenthesesForSingleImport", "addLeadingSpaceToComments", "useBackQuotesForImports" ]
      }
    }
  }, {
    "id" : "statistics.go.settings.imports",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "moveAllImportsInOneDeclaration", "noAddUnambiguousImportsOnTheFly", "importSorting.GOFMT", "noMoveAllImportsInOneDeclaration", "moveAllStdlibImportsInOneGroup", "noOptimizeImportsOnTheFly", "noGroupStdlibImports", "importSorting.GOIMPORTS", "groupStdlibImports", "noShowImportPopup" ]
      }
    }
  }, {
    "id" : "statistics.go.surroundwith.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:surroundwith.usage}" ]
    }
  }, {
    "id" : "statistics.go.ui.component.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:quick.settings}" ]
    }
  }, {
    "id" : "suggested.refactorings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "declaration_type" : [ "{util#class_name}" ],
        "id" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "__event_id" : [ "rename.suggested", "rename.popup.shown", "rename.popup.canceled", "rename.performed", "changeSignature.performed", "changeSignature.popup.canceled", "changeSignature.popup.shown", "changeSignature.suggested" ]
      }
    }
  }, {
    "id" : "surround.with",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#surround_with_id}", "{enum:surrounder.executed|live.template.executed|custom.template.executed}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "group" : [ "{util#live_template_group}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "title" : [ "{enum#server_title}" ],
        "type" : [ "{enum#surround_with_type}" ]
      },
      "enums" : {
        "server_title" : [ "Postfix", "TextMate snippet", "Emmet" ],
        "surround_with_type" : [ "surrounder", "template", "custom.template" ]
      }
    }
  }, {
    "id" : "svn.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:working.copy}" ],
      "event_data" : {
        "format" : [ "{regexp#version}", "{enum:unknown}" ]
      }
    }
  }, {
    "id" : "swagger.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:run.codegen.configuration.action|edit.codegen.configuration.action|edit.remote.specifications.endpoints|add.remote.specification}" ]
    }
  }, {
    "id" : "system.os",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#os}", "{enum:os.name|os.timezone|machine.id}" ],
      "event_data" : {
        "name" : [ "{enum#os}" ],
        "release" : [ "{enum#linux}", "{enum#__release}" ],
        "value" : [ "{regexp#time_zone}", "{enum:Z}", "{regexp#hash}" ],
        "version" : [ "{regexp#version}", "{enum:unknown.format}", "{enum#__version}" ]
      },
      "enums" : {
        "__release" : [ "unknown", "alpine", "amzn", "antergos", "arch", "centos", "debian", "deepin", "elementary", "fedora", "galliumos", "gentoo", "kali", "linuxmint", "manjaro", "neon", "nixos", "ol", "opensuse", "opensuse-leap", "opensuse-tumbleweed", "freedesktop", "parrot", "raspbian", "rhel", "sabayon", "solus", "ubuntu", "zorin", "custom" ],
        "__version" : [ "6.0", "6.1", "6.2", "6.3", "10.0" ],
        "linux" : [ "unknown", "alpine", "amzn", "antergos", "arch", "centos", "debian", "deepin", "elementary", "fedora", "galliumos", "gentoo", "kali", "linuxmint", "manjaro", "neon", "nixos", "ol", "opensuse", "opensuse-leap", "opensuse-tumbleweed", "freedesktop", "parrot", "raspbian", "rhel", "sabayon", "solus", "ubuntu", "zorin", "custom" ]
      },
      "regexps" : {
        "time_zone" : "(\\+|\\-)\\d\\d(\\:|\\_)\\d\\d"
      }
    }
  }, {
    "id" : "system.runtime",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "bit" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "name" : [ "{enum#gc}", "{enum#jvm_option}", "{enum#__name}", "{enum:Xmx|Xms|SoftRefLRUPolicyMSPerMB|ReservedCodeCacheSize}" ],
        "value" : [ "{regexp#integer}" ],
        "vendor" : [ "{enum#jvm_vendor}", "{enum#__vendor}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "cores", "garbage.collector", "jvm", "jvm.bit", "jvm.option" ],
        "__event_id" : [ "cores", "garbage.collector", "jvm.option", "jvm", "debug.agent" ],
        "__name" : [ "Shenandoah", "G1_Young_Generation", "G1_Old_Generation", "Copy", "MarkSweepCompact", "PS_MarkSweep", "PS_Scavenge", "ParNew", "ConcurrentMarkSweep" ],
        "__vendor" : [ "JetBrains", "Apple", "Oracle", "Sun", "IBM", "Azul", "Other" ],
        "gc" : [ "Shenandoah", "G1_Young_Generation", "G1_Old_Generation", "Copy", "MarkSweepCompact", "PS_MarkSweep", "PS_Scavenge", "ParNew", "ConcurrentMarkSweep" ],
        "jvm_option" : [ "Xmx", "Xms", "SoftRefLRUPolicyMSPerMB", "ReservedCodeCacheSize" ],
        "jvm_vendor" : [ "JetBrains", "Apple", "Oracle", "Sun", "IBM", "Azul", "Other" ]
      }
    }
  }, {
    "id" : "terminalShell",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ssh.exec|local.exec|terminal.command.executed|terminal.smart.command.executed}" ],
      "event_data" : {
        "os-version" : [ "{regexp#version}" ],
        "runAnythingProvider" : [ "{util#class_name}" ],
        "shell" : [ "{enum#__shell}" ],
        "terminalCommandHandler" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__shell" : [ "bash", "cmd", "zsh", "other", "fish", "powershell", "sh", "wsl", "cmder_shell", "tcsh", "git-bash", "cmder", "pwsh", "git-cmd", "git", "activate", "init", "ubuntu", "ubuntu1804", "anaconda3", "cexec", "cygwin", "miniconda3", "msys2_shell" ]
      }
    }
  }, {
    "id" : "toolbar",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#action}", "{enum:clicked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ],
        "class" : [ "{util#class_name}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "tooltip.action.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute|show.all|show.description}" ],
      "event_data" : {
        "input_event" : [ "{util#shortcut}" ],
        "source" : [ "{enum:gear|shortcut|more.link}" ]
      }
    }
  }, {
    "id" : "toolwindow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{util#toolwindow}", "{enum:activated}", "{enum:activated|shown|hidden}" ],
      "event_data" : {
        "Location" : [ "{enum#__Location}" ],
        "Source" : [ "{enum:StripeButton|ToolWindowHeader|ToolWindowHeaderAltClick|Content|Switcher|SwitcherSearch|ToolWindowsWidget|RemoveStripeButtonAction|HideOnShowOther|HideSide|CloseFromSwitcher|ActivateActionMenu|ActivateActionKeyboardShortcut|ActivateActionGotoAction|ActivateActionOther|CloseAction|HideButton|HideToolWindowAction|HideSideWindowsAction|HideAllWindowsAction|JumpToLastWindowAction}" ],
        "ViewMode" : [ "{enum#__ViewMode}" ],
        "id" : [ "{util#toolwindow}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__Location" : [ "Left_Top", "Left_Bottom", "Bottom_Left", "Bottom_Right", "Right_Bottom", "Right_Top", "Top_Right", "Top_Left", "BottomRight", "BottomLeft", "LeftTop", "LeftBottom", "RightTop", "TopRight", "RightBottom", "TopLeft" ],
        "__ViewMode" : [ "Dock_Pinned", "DockPinned", "Dock_Unpinned", "DockUnpinned", "Undock", "Float", "Window" ]
      }
    }
  }, {
    "id" : "ui.accessibility.screen.reader",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "screen.reader.{enum:ENABLED|DISABLED}" ]
    }
  }, {
    "id" : "ui.dialogs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{util#dialog_class}", "{enum:show|close}", "{enum:show|close|help.clicked}" ],
      "event_data" : {
        "code" : [ "{enum:0|1|2}" ],
        "dialog_class" : [ "{util#dialog_class}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum:show|close}" ]
      }
    }
  }, {
    "id" : "ui.editor.color.schemes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:enabled.color.scheme}" ],
      "event_data" : {
        "is_dark" : [ "{enum#boolean}" ],
        "scheme" : [ "{enum#__scheme}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_сontrast", "ReSharper", "Rider", "Other" ],
        "__scheme" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_contrast", "ReSharper", "Rider", "Other", "IntelliJ_Light" ]
      }
    }
  }, {
    "id" : "ui.event",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "with_selection" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "ProgressPaused", "ProgressResumed", "NavBarShowPopup", "NavBarNavigate", "BreadcrumbShowTooltip", "BreadcrumbNavigate", "DumbModeDialogWasNotNeeded", "DumbModeDialogRequested", "DumbModeDialogShown", "DumbModeDialogCancelled", "DumbModeDialogFinished", "DumbModeDialogProceededToActions", "IncrementalSearchActivated", "IncrementalSearchKeyTyped", "IncrementalSearchCancelled", "IncrementalSearchNextPrevItemSelected", "DumbModeBalloonWasNotNeeded", "DumbModeBalloonRequested", "DumbModeBalloonShown", "DumbModeBalloonCancelled", "DumbModeBalloonProceededToActions", "ShowUsagesPopupShowSettings", "LookupExecuteElementAction", "ToolWindowsWidgetPopupClicked", "ToolWindowsWidgetPopupShown", "LookupShowElementActions", "ImplementationViewComboBoxSelected", "ImplementationViewToolWindowOpened", "DaemonEditorPopupInvoked", "HectorPopupDisplayed" ]
      }
    }
  }, {
    "id" : "ui.fonts",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "UI.font.size[{regexp#integer}]", "Presentation.mode.font.size[{regexp#integer}]", "Editor.font.size[{regexp#integer}]", "IDE.editor.font.size[{regexp#integer}]", "Console.font.size[{regexp#integer}]", "QuickDoc.font.size[{enum#_}]", "UI.font.name[{enum#font}]", "Editor.font.name[{enum#font}]", "IDE.editor.font.name[{enum#font}]", "Console.font.name[{enum#font}]", "{enum:editor.lineSpacing}", "{enum#metrics}", "{enum#__event_id}" ],
      "event_data" : {
        "font_name" : [ "{enum#font}", "{enum#__font_name}" ],
        "font_size" : [ "{regexp#integer}", "{enum#_}", "{enum#__font_size}" ],
        "line_spacing" : [ "{regexp#float}" ],
        "value" : [ "{regexp#float}" ]
      },
      "enums" : {
        "_" : [ "X_SMALL", "X_LARGE", "XX_SMALL", "XX_LARGE", "SMALL", "MEDIUM", "LARGE" ],
        "__event_id" : [ "UI", "Presentation.mode", "Editor", "IDE.editor", "Console", "QuickDoc", "editor.lineSpacing" ],
        "__font_name" : [ "Monospaced", "Menlo", "DejaVu_Sans_Mono", ".SFNSText-Regular", "Fira_Code", "Lucida_Grande", "Source_Code_Pro", "Segoe_UI", "Ubuntu", ".SF_NS_Text", "Consolas", "Noto_Sans_Regular", "Microsoft_YaHei", "Fira_Code_Retina", "Cantarell_Regular", "Microsoft_YaHei_UI", "Monaco", "Noto_Sans", "Dialog.plain", "Fira_Code_Medium", "Courier_New", "Tahoma", "Hack", "DejaVu_Sans", "Ubuntu_Mono", "Droid_Sans_Mono", "Dialog", "Inconsolata", "Malgun_Gothic", "Cantarell", "DialogInput", "Yu_Gothic_UI_Regular", "Roboto", "Liberation_Mono", "Lucida_Console", "D2Coding", "Lucida_Sans_Typewriter", "Fira_Code_Light", "Droid_Sans", "Verdana", "Arial", "Roboto_Mono", "Segoe_UI_Semibold", "SF_Mono", "Droid_Sans_Mono_Slashed", "LucidaGrande", "Operator_Mono", "Ayuthaya", "Hasklig", "Iosevka", "Andale_Mono", "Anonymous_Pro", "Anonymous_Pro_for_Powerline", "D2Coding_ligature", "Dank_Mono", "DejaVu_Sans_Mono_for_Powerline", "Fantasque_Sans_Mono", "Fira_Mono_for_Powerline", "Hack_Nerd_Font", "IBM_Plex_Mono", "Meslo_LG_L_DZ_for_Powerline", "Meslo_LG_M_for_Powerline", "Meslo_LG_S_for_Powerline", "Microsoft_YaHei_Mono", "Noto_Mono_for_Powerline", "Noto_Sans_Mono", "PT_Mono", "PragmataPro", "SourceCodePro+Powerline+Awesome_Regular", "Source_Code_Pro_Semibold", "Source_Code_Pro_for_Powerline", "Ubuntu_Mono_derivative_Powerline", "YaHei_Consolas_Hybrid", "mononoki", "Bitstream_Vera_Sans_Mono", "Comic_Sans_MS", "Courier_10_Pitch", "Cousine", "2Coding_ligature", "Droid_Sans_Mono_Dotted", "Inconsolata-dz", "Input", "Input_Mono", "Meslo_LG_M_DZ_for_Powerline", "Migu_2M", "Monoid", "Operator_Mono_Book", "Operator_Mono_Lig", "Operator_Mono_Medium", "Abadi_MT_Condensed_Extra_Bold", "Al_Bayan", "Meiryo", "Microsoft_JhengHei", "Microsoft_Yahei_UI", "SansSerif", "Ubuntu_Light", "JetBrains_Mono", ".AppleSystemUIFont", ".SFNS-Regular" ],
        "__font_size" : [ "X_SMALL", "X_LARGE", "XX_SMALL", "XX_LARGE", "SMALL", "MEDIUM", "LARGE" ],
        "font" : [ "Monospaced", "Menlo", "DejaVu_Sans_Mono", ".SFNSText-Regular", "Fira_Code", "Lucida_Grande", "Source_Code_Pro", "Segoe_UI", "Ubuntu", ".SF_NS_Text", "Consolas", "Noto_Sans_Regular", "Microsoft_YaHei", "Fira_Code_Retina", "Cantarell_Regular", "Microsoft_YaHei_UI", "Monaco", "Noto_Sans", "Dialog.plain", "Fira_Code_Medium", "Courier_New", "Tahoma", "Hack", "DejaVu_Sans", "Ubuntu_Mono", "Droid_Sans_Mono", "Dialog", "Inconsolata", "Malgun_Gothic", "Cantarell", "DialogInput", "Yu_Gothic_UI_Regular", "Roboto", "Liberation_Mono", "Lucida_Console", "D2Coding", "Lucida_Sans_Typewriter", "Fira_Code_Light", "Droid_Sans", "Verdana", "Arial", "Roboto_Mono", "Segoe_UI_Semibold", "SF_Mono", "Droid_Sans_Mono_Slashed", "LucidaGrande", "Operator_Mono", "Ayuthaya", "Hasklig", "Iosevka", "Andale_Mono", "Anonymous_Pro", "Anonymous_Pro_for_Powerline", "D2Coding_ligature", "Dank_Mono", "DejaVu_Sans_Mono_for_Powerline", "Fantasque_Sans_Mono", "Fira_Mono_for_Powerline", "Hack_Nerd_Font", "IBM_Plex_Mono", "Meslo_LG_L_DZ_for_Powerline", "Meslo_LG_M_for_Powerline", "Meslo_LG_S_for_Powerline", "Microsoft_YaHei_Mono", "Noto_Mono_for_Powerline", "Noto_Sans_Mono", "PT_Mono", "PragmataPro", "SourceCodePro+Powerline+Awesome_Regular", "Source_Code_Pro_Semibold", "Source_Code_Pro_for_Powerline", "Ubuntu_Mono_derivative_Powerline", "YaHei_Consolas_Hybrid", "mononoki", "Bitstream_Vera_Sans_Mono", "Comic_Sans_MS", "Courier_10_Pitch", "Cousine", "2Coding_ligature", "Droid_Sans_Mono_Dotted", "Inconsolata-dz", "Input", "Input_Mono", "Meslo_LG_M_DZ_for_Powerline", "Migu_2M", "Monoid", "Operator_Mono_Book", "Operator_Mono_Lig", "Operator_Mono_Medium", "Abadi_MT_Condensed_Extra_Bold", "Al_Bayan", "Meiryo", "Microsoft_JhengHei", "Microsoft_Yahei_UI", "SansSerif", "Ubuntu_Light", "JetBrains_Mono", ".AppleSystemUIFont", ".SFNS-Regular" ],
        "metrics" : [ "UI", "Presentation.mode", "Editor", "IDE.editor", "Console", "QuickDoc", "editor.lineSpacing" ]
      }
    }
  }, {
    "id" : "ui.hidpi.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "per_monitor_dpi", "system_dpi" ]
      }
    }
  }, {
    "id" : "ui.info.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "Recent.Files[{enum:30_50|more.than.50|15_30|15}]", "Tabs.{enum:Top|None|Right|Left|Bottom}", "Allow.merging.buttons.{enum#state}", "Tool.Window.buttons.{enum:hidden|visible}", "Toolbar.and.NavBar.{enum:hidden|visible}", "Toolbar.{enum:hidden|visible}", "Nav.Bar.{enum:hidden|visible|floating}", "Status.bar.{enum:visible|hidden}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "display_id" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "grouped" : [ "{enum:[30_50]|[more.than.50]|[15_30]|[15]}" ],
        "navbar" : [ "{enum:visible|hidden}" ],
        "scale" : [ "{regexp#float}" ],
        "scale_mode" : [ "{enum#boolean}" ],
        "toolbar" : [ "{enum:visible|hidden}" ],
        "value" : [ "{enum:visible|floating}", "{enum:visible|hidden}", "{enum:Top|None|Right|Left|Bottom}", "{enum#look_and_feel}", "{enum:per_monitor_dpi|system_dpi}", "{regexp#integer}", "{regexp#integer}x{regexp#integer}", "{regexp#integer}x{regexp#integer}_({regexp#integer}%)" ]
      },
      "enums" : {
        "_" : [ "recent.files", "Gutter.Icons", "Line.Numbers", "Toolbar.and.NavBar", "Show.tips.on.startup", "Retina", "Soft.Wraps", "Block.cursor", "QuickDoc.Show.Toolwindow", "QuickDoc.AutoUpdate" ],
        "__event_id" : [ "Nav.Bar", "Toolbar", "Status.bar", "Tool.Window.buttons", "Toolbar.and.NavBar", "Recent.files.limit", "Show.Editor.Tabs.In.Single.Row", "Hide.Editor.Tabs.If.Needed", "Block.cursor", "Line.Numbers", "Gutter.Icons", "Soft.Wraps", "Tabs", "Retina", "Show.tips.on.startup", "Allow.merging.buttons", "QuickDoc.Show.Toolwindow", "QuickDoc.AutoUpdate", "Look.and.Feel", "Hidpi.Mode", "Screen.Reader", "Screen.Scale", "Nav.Bar.members", "QuickListsCount", "Number.Of.Monitors", "Screen.Resolution" ]
      }
    }
  }, {
    "id" : "ui.look.and.feel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#laf}" ],
      "enums" : {
        "laf" : [ "Darcula", "IntelliJ", "Light", "High_contrast", "Dark_purple", "Cyan_light", "Rider_Dark", "Gray" ]
      }
    }
  }, {
    "id" : "ui.mnemonic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:mnemonic.used}" ],
      "event_data" : {
        "type" : [ "{enum:mac.alt.based|regular|mac.regular}" ]
      }
    }
  }, {
    "id" : "ui.screen.scale",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#integer}", "{regexp#integer}.{regexp#integer}", "ScaledMode_{regexp#integer}", "ScaledMode_{regexp#integer}.{regexp#integer}" ]
    }
  }, {
    "id" : "ui.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum#type}", "{enum:select|reset|apply|search}" ],
      "event_data" : {
        "characters" : [ "{regexp#integer}" ],
        "configurable" : [ "{util#class_name}" ],
        "hits" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#type}" ]
      },
      "enums" : {
        "type" : [ "select", "apply", "reset" ]
      }
    }
  }, {
    "id" : "ui.tips",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:tip.shown|dialog.shown|next.tip|previous.tip}" ],
      "event_data" : {
        "algorithm" : [ "{enum#__algorithm}", "{enum:ONE_TIP_SURROUNDWITH_SUMMER2020|ONE_TIP_EXTENDSELECTION_SUMMER2020|ONE_TIP_SWITCHER_SUMMER2020|LOCAL_SORT_SUMMER2020}" ],
        "feature_id" : [ "{util#tip_info}" ],
        "filename" : [ "{util#tip_info}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#type}", "{enum:automatically|manually}" ],
        "version" : [ "{regexp#version}", "{enum:unknown}" ]
      },
      "enums" : {
        "_" : [ "shown.automatically", "shown.manually", "dialog.shown", "next.tip", "previous.tip" ],
        "__algorithm" : [ "TOP", "MATRIX_ALS", "MATRIX_BPR", "PROB", "WIDE", "CODIS", "RANDOM", "WEIGHTS_LIN_REG", "default_shuffle", "unknown", "ONE_TIP_SUMMER2020", "RANDOM_SUMMER2020" ],
        "type" : [ "automatically", "manually" ]
      }
    }
  }, {
    "id" : "usage.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:usage.navigate|usage.shown}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "reference_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "user.advanced.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:build|licencing}" ],
      "event_data" : {
        "is_jb_team" : [ "{enum#boolean}" ],
        "metadata" : [ "{regexp#license_metadata}" ],
        "value" : [ "{enum#value}", "{enum:eap|release}", "{enum:evaluation|license}" ]
      },
      "enums" : {
        "_" : [ "eap", "release", "evaluation", "license", "build", "licencing" ],
        "value" : [ "eap", "release", "evaluation", "license" ]
      }
    }
  }, {
    "id" : "vcs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "changesDelta" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "unversionedDelta" : [ "{regexp#integer}" ],
        "wasUpdatingBefore" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "update.started", "update.finished", "commit.started", "commit.finished", "fetch.started", "fetch.finished", "non.modal.commit.state.changed", "non.modal.commit.promotion.shown", "non.modal.commit.promotion.accepted", "non.modal.commit.promotion.rejected", "changes.view.refresh" ]
      }
    }
  }, {
    "id" : "vcs.application.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:commit.from.local.changes|non.modal.commit|non.modal.commit.new.installation|non.modal.commit.promotion}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:shown|accepted|rejected}" ]
      }
    }
  }, {
    "id" : "vcs.back.forward.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "enums" : {
        "_" : [ "vcs.log", "local.changes", "project.view", "diff.viewer", "editor", "unknown" ]
      }
    }
  }, {
    "id" : "vcs.change.reminder",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:changelist_changed|changes_committed|node_expanded}" ],
      "event_data" : {
        "committed_files" : [ "{regexp#hash}" ],
        "cur_modified_files" : [ "{regexp#hash}" ],
        "displayed_prediction" : [ "{regexp#hash}" ],
        "empty_reason" : [ "{enum#__empty_reason}" ],
        "execution.time" : [ "{regexp#integer}" ],
        "execution_time" : [ "{regexp#integer}" ],
        "prediction_for_files" : [ "{regexp#hash}" ],
        "prev_modified_files" : [ "{regexp#hash}" ],
        "show.dialog.time" : [ "{regexp#integer}" ],
        "show_dialog_time" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "_" : [ "handler.registered", "plugin.disabled", "dialog.closed", "committed.anyway", "commit.canceled", "not.showed", "prediction.calculated" ],
        "__empty_reason" : [ "service_init", "too_many_files", "data_manager_removed", "requirements_not_met", "data_pack_is_not_full", "data_pack_changed", "exception_thrown", "calculation_canceled", "unexpected_reason" ]
      }
    }
  }, {
    "id" : "vcs.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "is_base_dir" : [ "{enum#boolean}" ],
        "is_project_mapping" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project" : [ "{util#project}" ],
        "vcs" : [ "{enum#vcs}", "{enum:None}" ]
      },
      "enums" : {
        "_" : [ "active.vcs", "mapping", "project.mapped.root", "mapped.roots", "changelists", "unversioned.files", "ignored.files" ],
        "__event_id" : [ "active.vcs", "mapping", "project.mapped.root", "mapped.roots", "changelists", "unversioned.files", "ignored.files" ]
      }
    }
  }, {
    "id" : "vcs.diff",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "ignore.policy.{enum#_}.{enum#_}", "highlight.policy.{enum#_}.{enum#_}", "show.warnings.policy.{enum#_}.{enum#_}", "collapse.unchanged.{enum#_}", "collapse.unchanged.{enum#_}.{enum#_}", "show.line.numbers.{enum#_}.{enum#_}", "use.soft.wraps.{enum#_}", "use.soft.wraps.{enum#_}.{enum#_}", "use.unified.diff.{enum#_}.{enum#_}", "enable.read.lock.{enum#_}.{enum#_}", "iterate.next.file.{enum#_}", "external.diff.{enum#_}", "external.diff.default.{enum#_}", "external.merge.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "diff_place" : [ "{enum#diff_place}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "Default", "default", "trim_whitespaces", "TRIM_WHITESPACES", "ignore_whitespaces", "IGNORE_WHITESPACES_CHUNKS", "ignore_whitespaces_chunks", "formatting", "by_line", "by_word", "by_word_split", "BY_WORD_SPLIT", "by_char", "do_not_highlight", "inspections", "advanced", "simple", "enabled", "disabled", "ChangesView", "VcsLogView", "CommitDialog", "Merge", "TestsFiledAssertions" ],
        "_1" : [ "ignore.policy", "highlight.policy", "show.warnings.policy", "collapse.unchanged", "show.line.numbers", "use.soft.wraps", "use.unified.diff", "enable.read.lock", "iterate.next.file", "use.external.diff", "use.external.diff.by.default", "use.external.merge", "sync.scroll", "context.range", "merge.apply.non.conflicted", "merge.enable.lst.markers", "show.breadcrumbs", "show.indent.lines", "show.white.spaces" ],
        "diff_place" : [ "Default", "ChangesView", "VcsLogView", "CommitDialog", "TestsFiledAssertions", "Merge", "DirDiff", "External" ],
        "value" : [ "INSPECTIONS", "ADVANCED", "SIMPLE", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT", "BOTTOM", "TOP" ]
      }
    }
  }, {
    "id" : "vcs.diff.trigger",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "toggle.highlight.policy.{enum#_}", "toggle.ignore.policy.{enum#_}", "toggle.diff.tool.{enum#_}", "toggle.diff.tool.third.party.other", "{enum#_1}" ],
      "event_data" : {
        "diff_place" : [ "{enum#diff_place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "Side-by-side_viewer", "Unified_viewer", "Binary_file_viewer" ],
        "_1" : [ "toggle.highlight.policy", "toggle.ignore.policy", "toggle.diff.tool" ],
        "diff_place" : [ "Default", "ChangesView", "VcsLogView", "CommitDialog", "TestsFiledAssertions", "Merge", "DirDiff", "External", "unknown" ],
        "value" : [ "Side-by-side_viewer", "Binary_file_viewer", "Unified_viewer", "Error_viewer", "Patch_content_viewer", "Apply_patch_somehow", "Data_Diff_Viewer", "Database_Schema_Diff_Viewer", "Directory_viewer", "SVN_properties_viewer", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT" ]
      }
    }
  }, {
    "id" : "vcs.git.project.root",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "base.dir.undefined.{enum#state}", "has.default.git.mapping.{enum#state}", "has.other.vcses.mappings.{enum#state}", "git.mappings.count.{regexp#count}", "git.detected.roots.count.{regexp#count}", "project.mapping.roots.count.{regexp#count}", "single.mapping.{enum#dir}", "singe.base.mapping.{enum#dir}" ],
      "enums" : {
        "dir" : [ "is.base.dir", "above.base.dir", "under.base.dir" ]
      }
    }
  }, {
    "id" : "vcs.git.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "config.repo.sync.{enum#sync_state}", "config.update.type.{enum#upd_method}", "config.save.policy.{enum#upd_changes}", "config.ssh.{enum#state}", "config.push.autoupdate.{enum#state}", "config.push.update.all.roots.{enum#state}", "config.cherry-pick.autocommit.{enum#state}", "config.warn.about.crlf.{enum#state}", "config.warn.about.detached.{enum#state}", "data.local.branches.count.{regexp#count}", "data.remote.branches.count.{regexp#count}", "data.remotes.in.project.{regexp#count}", "data.remote.servers.{enum#_}.{regexp#count}", "version" ],
      "event_data" : {
        "type" : [ "{enum#type}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "github.com", "gitlab.com", "bitbucket.org", "github.custom", "gitlab.custom", "bitbucket.custom" ],
        "sync_state" : [ "SYNC", "DONT_SYNC", "NOT_DECIDED" ],
        "type" : [ "UNIX", "MSYS", "CYGWIN", "UNDEFINED", "NULL" ],
        "upd_changes" : [ "STASH", "SHELVE" ],
        "upd_method" : [ "BRANCH_DEFAULT", "MERGE", "REBASE" ]
      }
    }
  }, {
    "id" : "vcs.github",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "github.accounts.count.{regexp#count}", "github.accounts.not.default.host.{enum#state}", "{enum:accounts}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_enterprise" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.github.pullrequest.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:timeline.opened|diff.opened|merged|server.meta.collected}" ],
      "event_data" : {
        "anonymized_id" : [ "{regexp#hash}" ],
        "count" : [ "{regexp#integer}" ],
        "method" : [ "{enum:MERGE|SQUASH|REBASE}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "vcs.github.pullrequests",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:toolwindow}" ],
      "event_data" : {
        "initialized_tabs" : [ "{regexp#integer}" ],
        "tabs" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vcs.log.data",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "commit.count.{regexp#count}", "branches.count.{regexp#count}", "users.count.{regexp#count}", "third.party.root.count.{regexp#count}", "{enum#vcs}.root.count.{regexp#count}", "{enum:dataInitialized}", "{enum:commit.count|branches.count|users.count|root.count}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum#vcs}", "{enum:third.party}" ]
      }
    }
  }, {
    "id" : "vcs.log.index.application",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "big.repositories.{regexp#count}", "index.disabled.in.registry.{enum#state}", "index.forced.in.registry.{enum#state}", "{enum:big.repositories|index.disabled.in.registry|index.forced.in.registry}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "value" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.log.index.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "indexing.too.long.notification.{regexp#count}", "resume.indexing.click.{regexp#count}", "indexing.time.minutes.{regexp#count}", "index.disabled.in.project.{enum#state}", "{enum#_}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "os" : [ "{enum#os}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "indexing.too.long.notification", "resume.indexing.click", "indexing.time.minutes", "index.disabled.in.project" ]
      }
    }
  }, {
    "id" : "vcs.log.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "log.Go_to_{enum#_}_Commit.Select_from_Popup", "history.Go_to_{enum#_}_Commit.Select_from_Popup", "log.{enum#vcs_trigger}", "history.{enum#vcs_trigger}", "{enum#vcs_trigger}", "{util#vcs_log_trigger_event_id}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "context" : [ "{enum:history|log}" ],
        "filter_name" : [ "{util#vcs_log_filter_name}" ],
        "has_revision" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "kind" : [ "{enum:multiple|folder|file}" ],
        "parent_commit" : [ "{enum#boolean}" ],
        "target" : [ "{enum:node|arrow|root.column}" ]
      },
      "enums" : {
        "_" : [ "Parent", "Child" ],
        "vcs_trigger" : [ "com.intellij.vcs.log.ui.actions.RefreshLogAction", "com.intellij.vcs.log.ui.actions.GoToHashOrRefAction", "VcsLogCreatePatchActionProvider$Dialog", "VcsLogCreatePatchActionProvider$Clipboard", "UserFilterSet", "ToggleLogColumnsActionGroup$ToggleColumnAction", "TextFilterSet", "StructureFilterSet", "ShowDiffAfterWithLocalFromLogActionProvider", "ShowCommitTooltipAction", "RootsFilterSet", "RootColumnClick", "RefreshLogAction", "Refresh", "RangeFilterSet", "OpenAnotherLogTabAction", "HashFilterSet", "GraphNodeClick", "GraphArrowClick", "Go_to_Parent_Commit.Select_from_Popup", "Go_to_Child_Commit.Select_from_Popup", "Go_To_Hash/Branch/Tag", "GoToParentRowAction", "GoToHashOrRefAction", "GoToChildRowAction", "FocusTextFilterAction", "Expand_Linear_Branches", "ExpandGraphAction", "DeepCompareAction", "DateFilterSet", "CompareRevisionsFromLogAction", "CollapseGraphAction", "BranchFilterSet", "com.intellij.vcs.log.ui.actions.history.CompareRevisionsFromFileHistoryActionProvider", "Show_Diff", "ShowDiffAfterWithLocalFromFileHistoryActionProvider", "ShowAllAffectedFromHistoryAction", "OpenRepositoryVersionFromHistoryAction", "GetVersionFromHistoryAction", "CreatePatchFromHistoryActionProvider$Dialog", "Compare_with_Local", "CompareRevisionsFromFolderHistoryActionProvider", "CompareRevisionsFromFileHistoryActionProvider", "AnnotateRevisionFromHistoryAction", "TableRowClick", "TabNavigation", "ShowFolderHistory", "ShowFileHistoryForRevision", "ShowFileHistory", "ColumnWidthReset" ]
      }
    }
  }, {
    "id" : "vcs.log.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "details.{enum#state}", "diffPreview.{enum#state}", "long.edges.{enum#state}", "roots.{enum#state}", "labels.compact.{enum#state}", "labels.showTagNames.{enum#state}", "textFilter.regex.{enum#state}", "textFilter.matchCase.{enum#state}", "additionalTabs.count.{regexp#integer}", "branchFilter.{enum#state}", "dateFilter.{enum#state}", "hashFilter.{enum#state}", "highlighter.{enum:CURRENT_BRANCH|MERGE_COMMITS|MY_COMMITS}.{enum#state}", "parentChanges.{enum#state}", "rootsFilter.{enum#state}", "structureFilter.{enum#state}", "textFilter.{enum#state}", "userFilter.{enum#state}", "sort.bek", "{enum#_}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{util#vcs_log_highlighter_id}", "THIRD_PARTY" ],
        "name" : [ "{util#vcs_log_filter_name}", "{util#vcs_log_column_name}" ],
        "value" : [ "{util#vcs_log_sort_kind}", "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "details", "diffPreview", "long.edges", "roots", "labels.compact", "labels.showTagNames", "textFilter.regex", "textFilter.matchCase", "additionalTabs", "filter", "highlighter", "parentChanges", "sort", "uiInitialized", "onlyAffectedChanges", "column" ]
      }
    }
  }, {
    "id" : "vcs.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "active.changelists.count.{regexp#count}", "unversioned.files.count.{regexp#count}", "ignored.files.count.{regexp#count}", "vcs.roots.count.{regexp#count}", "has.default.vcs.root.mapping.{enum#state}" ]
    }
  }, {
    "id" : "vcs.names",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "third.party.{util#plugin}", "third.parth.other", "{enum#vcs}" ]
    }
  }, {
    "id" : "vcs.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "offer.move.partially.committed{enum#_1}", "offer.move.failed.committed.{enum#_}", "offer.remove.empty.changelist.{enum#_}", "changelist.make.new.active{enum#_1}", "changelist.preselect.existing{enum#_1}", "perform.update.in.background{enum#_1}", "perform.commit.in.background{enum#_1}", "perform.edit.in.background{enum#_1}", "perform.checkout.in.background{enum#_1}", "perform.add_remove.in.background{enum#_1}", "perform.rollback.in.background{enum#_1}", "commit.before.check.code.smell{enum#_1}", "commit.before.check.code.cleanup{enum#_1}", "commit.before.check.todo{enum#_1}", "commit.before.check.non.empty.comment{enum#_1}", "commit.before.optimize.imports{enum#_1}", "commit.before.reformat.project{enum#_1}", "commit.before.rearrange{enum#_1}", "commit.clear.initial.comment{enum#_1}", "commit.use.right.margin{enum#_1}", "commit.show.unversioned{enum#_1}", "show.changes.preview{enum#_1}", "include.text.into.shelf{enum#_1}", "check.conflicts.in.background{enum#_1}" ],
      "enums" : {
        "_" : [ "ask", "disabled", "silently", "unknown" ],
        "_1" : [ "", ".disabled" ]
      }
    }
  }, {
    "id" : "vcs.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "project" : [ "{util#project}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "offer.move.partially.committed", "offer.move.failed.committed", "offer.remove.empty.changelist", "changelist.make.new.active", "changelist.preselect.existing", "perform.update.in.background", "perform.commit.in.background", "perform.edit.in.background", "perform.checkout.in.background", "perform.add_remove.in.background", "perform.rollback.in.background", "commit.before.check.code.smell", "commit.before.check.code.cleanup", "commit.before.check.todo", "commit.before.check.non.empty.comment", "commit.before.optimize.imports", "commit.before.reformat.project", "commit.before.rearrange", "commit.clear.initial.comment", "commit.use.right.margin", "commit.show.unversioned", "show.changes.preview", "include.text.into.shelf", "check.conflicts.in.background" ],
        "value" : [ "ask", "disabled", "silently", "unknown" ]
      }
    }
  }, {
    "id" : "vcs.svn.format",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#version}", "{enum:unknown}" ]
    }
  }, {
    "id" : "vfs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:refreshed}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "start_time_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vulnerability.scanner",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:RunScan|FinishScan|AddToIgnore|FindUsages|Navigate|Fix|FixProperty|BrowseInfo|OpenLink}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "place" : [ "{util#place}" ],
        "projectType" : [ "{enum:Maven|Gradle|GradleKts|Other}" ],
        "scanType" : [ "{enum:All|Dependencies|Http|Secrets}" ],
        "status" : [ "{enum:SUCCESS|CANCELED|HAS_ERROR}" ]
      }
    }
  }, {
    "id" : "welcomescreen.interaction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "config_imported" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "first_start" : [ "{enum#boolean}" ],
        "keymap_name" : [ "{enum#keymaps}" ],
        "new_font_size" : [ "{regexp#integer}" ],
        "old_font_size" : [ "{regexp#integer}" ],
        "sync_os" : [ "{enum#boolean}" ],
        "tab_type" : [ "{enum:TabNavProject|TabNavCustomize|TabNavPlugins|TabNavTutorials|TabNavOther}" ],
        "theme_name" : [ "{enum#look_and_feel}" ]
      },
      "enums" : {
        "__event_id" : [ "color.blindness.changed", "editor.font.changed", "ide.font.changed", "keymap.changed", "laf.changed", "plugins.modified", "project.search", "screen.hidden", "screen.shown", "screen.tab.selected" ]
      }
    }
  } ],
  "rules" : {
    "enums" : {
      "boolean" : [ "true", "false", "TRUE", "FALSE" ],
      "build_tools" : [ "Maven", "Gradle", "gradle", "sbt", "Clojure_Deps", "clojure_deps", "Pants", "pants", "bsp", "Kobalt", "kobalt", "undefined.system", "third.party", "SPM", "CompDB", "Compilation_Database", "Makefile" ],
      "keymaps" : [ "Mac_OS_X_10.5+", "$$default", "Default_for_GNOME", "Rider", "Eclipse", "Emacs", "Default_for_KDE", "Mac_OS_X", "ReSharper_OSX", "NetBeans_6.5", "Visual_Studio", "Rider_OSX", "TextMate", "Eclipse_(Mac_OS_X)", "ReSharper", "Xcode", "unknown", "custom", "Sublime_Text_(Mac_OS_X)", "Sublime_Text", "Default_for_XWin", "$default", "JBuilder", "VS_Code", "Visual_Studio_OSX", "Visual_Assist", "VSCode", "macOS_System_Shortcuts" ],
      "look_and_feel" : [ "Darcula", "IntelliJ", "Light", "High_contrast", "Dark_purple", "Cyan_light", "Rider_Dark", "Gray", "macOS_Light", "IntelliJ_Light", "Windows_10_Light", "Solarized_Dark", "Solarized_Light", "Monocai", "Xcode-Dark", "vuesion-theme", "Visual_Studio_Code_Dark_Plus", "Monokai_Pro", "Monokai_Pro_(Filter_Spectrum)", "Monokai_Pro_(Filter_Machine)", "Monokai_Pro_(Filter_Octagon)", "Monokai_Pro_(Filter_Ristretto)", "Atom_One_Dark", "NotReallyMDTheme", "Darcula_Darker", "Espresso_Light", "Spacegray", "Gradianto_Nature_Green", "Nord", "Obsidian", "Obsidian_Bright", "One_Dark", "Roboticket_Light", "Sublime", "Trash_Panda_Theme" ],
      "os" : [ "Windows", "Mac", "Linux", "FreeBSD", "ChromeOS", "Other" ],
      "plugin_type" : [ "PLATFORM", "JB_BUNDLED", "JB_NOT_BUNDLED", "LISTED", "NOT_LISTED", "UNKNOWN" ],
      "state" : [ "enabled", "disabled" ],
      "vcs" : [ "Git", "git", "SVN", "svn", "hg4idea", "Perforce", "perforce", "TFS", "tfs", "SourceSafe", "sourcesafe", "ClearCase", "clearcase", "CVS", "cvs", "TFVS", "tfvs", "VSS", "vss" ]
    },
    "regexps" : {
      "count" : "\\d+K?M?\\+?",
      "float" : "-?\\d+\\.\\d+(E\\-?\\d+)?",
      "hash" : "[0-9A-Fa-f]{40,64}",
      "integer" : "-?\\d+(\\+)?",
      "kotlin_version" : "\\d\\.\\d\\.\\d{1,3}-(dev|eap|release)-(\\d+-)?(AppCode|CLion|IJ|Studio)[0-9\\-\\.]+",
      "license_metadata" : "[0-9]{10}[A-Z]{4}[-0-9X]{6}",
      "mcu_name" : "UNKNOWN|UPDATE_FAILED|(STM32[A-Z]{1,2}\\w+)",
      "series" : "^(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+(?:_(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+)*$",
      "version" : "(\\d+\\.?)*\\d+"
    }
  },
  "version" : "1591"
}